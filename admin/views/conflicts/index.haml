-# coding: utf-8
-content_for :include do
  =stylesheet_link_tag 'tablesorter/style'
  =javascript_include_tag 'jquery.tablesorter.min', 'uitablefilter'
.row.wide
  .col-md-12
    .hero-unit
      %h1.title
        =mt('Conflicts')
    .inner
      %table.table.tablesorter#sortme
        %thead
          %tr
            %th.first=mat(:conflict, :name)
            %th=mat(:conflict, 'type')
            %th=mat(:conflict, :submitted_by)
            %th=mat(:conflict, 'last modified')
            %th=mat(:conflict, 'approval')
            -if ["admin","editor"].include?(current_account.role)
              %th=mat(:conflict, 'tags')
            %th.last
              %form#filter-form
                %input#filter{:name=>"filter",:value=>"",:maxlength=>"30",:size=>"30",:type=>"text",:placeholder=>'Filter'}/

        %tbody
          -@conflicts.each do |conflict|
            -next unless conflict.has_key?("name")
            -if conflict["approval_status"] == 'approved'
              %tr
                %td.first=conflict["name"]
                %td{:style=>"width:24%"}
                  %span=Category.find(conflict["category_id"]).name.gsub(/\s*\([^\)]+\)\s*/,"") if conflict["category_id"]
                %td{:style=>"width:16%"}
                  -if conflict["account_id"] and @accounts
                    %a{:href=>"/accounts/edit/#{conflict["account_id"]}"}=@accounts[conflict["account_id"]]
                    -if conflict["edited_by"] and conflict["edited_by"].to_i != conflict["account_id"].to_i
                      %br/
                      %span Last edit:
                      %a{:href=>"/accounts/edit/#{conflict["edited_by"]}"}=@accounts[conflict["edited_by"]]
                  -elsif conflict["account_id"] 
                    %span= Account.find(conflict["account_id"]).name
                %td{:style=>"width:92px"}
                  -if conflict["saved_at"]
                    -#%span=Time.parse(conflict["saved_at"].to_s).strftime '%Y-%m-%d'
                    %span="#{Admin.divtime(Time.now-Time.parse(conflict["saved_at"].to_s), false, false)} ago"
                  -else
                    %span &nbsp;
                %td
                  %span=conflict["approval_status"]
                -if ["admin","editor"].include?(current_account.role)
                  %td
                    =conflict["tags"].map{|t| Tag.find(t).name}.join(", ")
                %td.last
                  =link_to pat('Edit'), url(:conflicts, :edit, :id => conflict["id"]), :method => :get
                  |
                  =link_to pat('View'), "/conflict/#{conflict["slug"]}", :method => :get
                  -if ["admin","editor"].include? current_account.role
                    %br/
                    =link_to pat('Disapprove'), url(:conflicts, :disapprove, :id => conflict["id"]), :method => :get
            -else
              -unless current_account.nil?
                %tr{:style=>'color:#bbb'}
                  %td.first=conflict["name"]
                  %td{:style=>"width:24%"}
                    %span=Category.find(conflict["category_id"]).name.gsub(/\s*\([^\)]+\)\s*/,"") if conflict["category_id"]
                  %td{:style=>"width:16%"}
                    -if conflict["account_id"] and @accounts
                      %a{:href=>"/accounts/edit/#{conflict["account_id"]}"}=@accounts[conflict["account_id"]]
                      -if conflict["edited_by"] and conflict["edited_by"].to_i != conflict["account_id"].to_i
                        %br/
                        %span Last edit:
                        %a{:href=>"/accounts/edit/#{conflict["edited_by"]}"}=@accounts[conflict["edited_by"]]
                    -elsif conflict["account_id"] 
                      %span= Account.find(conflict["account_id"]).name
                  %td{:style=>"width:92px"}
                    -if conflict["saved_at"]
                      -#%span=Time.parse(conflict["saved_at"].to_s).strftime '%Y-%m-%d'
                      %span="#{Admin.divtime(Time.now-Time.parse(conflict["saved_at"].to_s), false, false)} ago"
                    -else
                      %span &nbsp;
                  %td
                    %span=conflict["approval_status"]
                  -if ["admin","editor"].include?(current_account.role)
                    %td
                      =conflict["tags"].map{|t| Tag.find(t).name}.join(", ")
                  %td.last
                    =link_to pat('Edit'), url(:conflicts, :edit, :id => conflict["id"]), :method => :get
                    |
                    =link_to pat('View'), "/conflict/#{conflict["slug"]}", :method => :get
                    -if ["admin","editor"].include? current_account.role
                      %br/
                      =link_to pat('Approve'), url(:conflicts, :approve, :id => conflict["id"]), :method => :get

      -unless current_account.nil?
        -if ["admin","editor"].include? current_account.role
          :javascript
            $(document).ready(function(){
              $('#sortme').tablesorter({
                headers: { 
                  6: { sorter: false } 
                } 
              });
              var theTable = $('table#sortme')
              $("#filter").click(function(){$('#filter').focus();});
              $("#filter").keyup(function() {
                $.uiTableFilter( theTable, this.value );
              })
              $('#filter-form').submit(function(){
                return false;
              }).focus(); 
            });
        -else
          :javascript
            $(document).ready(function(){
              $('#sortme').tablesorter({
                headers: { 
                  6: { sorter: false }
                } 
              });
              var theTable = $('table#sortme')
              $("#filter").click(function(){$('#filter').focus();});
              $("#filter").keyup(function() {
                $.uiTableFilter( theTable, this.value );
              })
              $('#filter-form').submit(function(){
                return false;
              }).focus(); 
            });
