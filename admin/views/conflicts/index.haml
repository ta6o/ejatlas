-# coding: utf-8
-content_for :include do
  =stylesheet_link_tag 'tablesorter/style'
  =javascript_include_tag 'jquery.tablesorter.min', 'uitablefilter'
#collab.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
  .modal-dialog
    .modal-content
      %form#collabform{:method=>'post',:action=>'/conflicts/add-collaborator'}
        .modal-header
          %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
          %input{:type=>'hidden',:name=>'model',:value=>(@actor.class.to_s)}
          %input{:type=>'hidden',:name=>'cid',:value=>@cid.to_s}
          .clearfix
            .pull-left
              %h3= "Add collaborator(s) to conflicts"
            .pull-right
              %button.btn.notr.btn-info{:type=>"submit"} Add selected collaborator(s) to selected conflicts
        .modal-body
          .row
            .col-md-6
              %h5 Select accounts below:
              .clearfix
                %input.autocomplete#account{:type=>"email",:style=>"width:100%;",:placeholder=>"Find email address","data-source"=>"emails"}
              %ul#collablist{:style=>"list-style-type:none;padding:0;"}
            .col-md-6
              %p
                %b#numsel
                %b cases selected:
              %ul#caselist{:style=>";padding:0;"}

.row.wide
  .col-md-12
    .hero-unit
      %h1.title
        =mt('Conflicts')
    .inner
      -if ["admin"].include?(current_account.role)
        .pull-right
          %a.btn.notr.btn-info{'data-toggle'=>'modal','data-target'=>'#collab'} Add collaborator(s) to selected conflicts
      %table.table.tablesorter#sortme
        %thead
          %tr
            %th.first=mat(:conflict, :name)
            %th=mat(:conflict, 'type')
            %th=mat(:conflict, :submitted_by)
            %th=mat(:conflict, 'last modified')
            %th=mat(:conflict, 'approval')
            -if ["admin","editor"].include?(current_account.role)
              %th=mat(:conflict, 'tags')
            %th.last
              %form#filter-form
                %input#filter{:name=>"filter",:value=>"",:maxlength=>"30",:size=>"30",:type=>"text",:placeholder=>'Filter'}/

        %tbody
          -@conflicts.each do |conflict|
            -next unless conflict.has_key?("name")
            -if conflict["approval_status"] == 'approved'
              %tr{:id=>"tr_#{conflict["id"]}"}
                %td.first=conflict["name"]
                %td{:style=>"width:24%"}
                  %span=Category.find(conflict["category_id"]).name.gsub(/\s*\([^\)]+\)\s*/,"") if conflict["category_id"]
                %td{:style=>"width:16%"}
                  -if conflict["account_id"] and @accounts
                    %a{:href=>"/accounts/edit/#{conflict["account_id"]}"}=@accounts[conflict["account_id"]]
                    -if conflict["edited_by"] and conflict["edited_by"].to_i != conflict["account_id"].to_i
                      %br/
                      %span Last edit:
                      %a{:href=>"/accounts/edit/#{conflict["edited_by"]}"}=@accounts[conflict["edited_by"]]
                    -if conflict["collaborators"] and conflict["collaborators"].any?
                      %br/
                      %span= "Collaborator#{conflict["collaborators"].length == 1 ? "" : "s"}:"
                      -conflict["collaborators"].each_with_index do |account,index|
                        -if @accounts[account]
                          %a{:href=>"/accounts/edit/#{account}"}=@accounts[account]
                          -if index < conflict["collaborators"].length - 1
                            ="/"
                  -elsif conflict["account_id"] 
                    %span= Account.find(conflict["account_id"]).name
                %td{:style=>"width:92px"}
                  -if conflict["saved_at"]
                    -#%span=Time.parse(conflict["saved_at"].to_s).strftime '%Y-%m-%d'
                    %span="#{Admin.divtime(Time.now-Time.parse(conflict["saved_at"].to_s), false, false)} ago"
                  -else
                    %span &nbsp;
                %td
                  %span=conflict["approval_status"]
                -if ["admin","editor"].include?(current_account.role)
                  %td
                    -if conflict["tags"]
                      %span=conflict["tags"].map{|t| Tag.find(t).name}.join(", ")
                      %span{:style=>"display:none;"}=conflict["tags"].map{|t| "tag_#{Tag.find(t).name.downcase.gsub(/\s+/,'_')}"}.join(" ")
                    -else
                      &nbsp;
                %td.last
                  =link_to pat('Edit'), url(:conflicts, :edit, :id => conflict["id"]), :method => :get
                  |
                  =link_to pat('View'), "/conflict/#{conflict["slug"]}", :method => :get
                  -if ["admin","editor"].include? current_account.role
                    %br/
                    =link_to pat('Disapprove'), url(:conflicts, :disapprove, :id => conflict["id"]), :method => :get
            -else
              -unless current_account.nil?
                %tr{:id=>"tr_#{conflict["id"]}",:style=>'color:#bbb'}
                  %td.first=conflict["name"]
                  %td{:style=>"width:24%"}
                    %span=Category.find(conflict["category_id"]).name.gsub(/\s*\([^\)]+\)\s*/,"") if conflict["category_id"]
                  %td{:style=>"width:16%"}
                    -if conflict["account_id"] and @accounts
                      %a{:href=>"/accounts/edit/#{conflict["account_id"]}"}=@accounts[conflict["account_id"]]
                      -if conflict["edited_by"] and conflict["edited_by"].to_i != conflict["account_id"].to_i
                        %br/
                        %span Last edit:
                        %a{:href=>"/accounts/edit/#{conflict["edited_by"]}"}=@accounts[conflict["edited_by"]]
                      -if conflict["collaborators"] and conflict["collaborators"].any?
                        %br/
                        %span= "Collaborator#{conflict["collaborators"].length == 1 ? "" : "s"}:"
                        -conflict["collaborators"].each_with_index do |account,index|
                          -if @accounts[account]
                            %a{:href=>"/accounts/edit/#{account}"}=@accounts[account]
                            -if index < conflict["collaborators"].length - 1
                              ="/"
                    -elsif conflict["account_id"] 
                      %span= Account.find(conflict["account_id"]).name
                  %td{:style=>"width:92px"}
                    -if conflict["saved_at"]
                      -#%span=Time.parse(conflict["saved_at"].to_s).strftime '%Y-%m-%d'
                      %span="#{Admin.divtime(Time.now-Time.parse(conflict["saved_at"].to_s), false, false)} ago"
                    -else
                      %span &nbsp;
                  %td
                    %span=conflict["approval_status"]
                  -if ["admin","editor"].include?(current_account.role)
                    %td
                      -if conflict["tags"]
                        %span=conflict["tags"].map{|t| Tag.find(t).name}.join(", ")
                        %span{:style=>"display:none;"}=conflict["tags"].map{|t| "tag_#{Tag.find(t).name.downcase.gsub(/\s+/,'_')}"}.join(" ")
                      -else
                        &nbsp;
                  %td.last.clearfix{:style=>"min-width:120px;"}
                    .pull-left
                      =link_to pat('Edit'), url(:conflicts, :edit, :id => conflict["id"]), :method => :get
                      |
                      =link_to pat('View'), "/conflict/#{conflict["slug"]}", :method => :get
                      -if ["admin","editor"].include? current_account.role
                        %br/
                        =link_to pat('Approve'), url(:conflicts, :approve, :id => conflict["id"]), :method => :get
                    -if ["admin"].include?(current_account.role)
                      .pull-right{:style=>"margin:1px 0 -4px"}
                        %input.multiselect{:type=>:checkbox,"data-id"=>conflict["id"],:checked=>false}

      -unless current_account.nil?
        -if ["admin","editor"].include? current_account.role
          :javascript
            $(document).ready(function(){
              $('#sortme').tablesorter({
                headers: { 
                  6: { sorter: false } 
                } 
              });
              var theTable = $('table#sortme')
              $("#filter").click(function(){$('#filter').focus();});
              $("#filter").keyup(function() {
                $.uiTableFilter( theTable, this.value );
              })
              $('#filter-form').submit(function(){
                return false;
              }).focus(); 
            });
            function select () {
              return $.map($("input.multiselect:checked"),function(e,i){ return $(e).data("id") });
            }
            $("#collabform").on("submit",function(ev){
              ev.preventDefault();
              accs = $.map($("ul#collablist li.on"),function(e,i){ return parseInt($(e).attr("id").split("_")[1]) });
              $.post("/conflicts/add_collaborators",{conflicts:select(),accounts:accs},function(data){
                if (data == "ack") {
                  window.location.reload();
                } else {
                  console.log(data);
                }
              });
            })
            $("#collab").on("shown.bs.modal",function(){
              $("#numsel").text(select().length);
              $("ul#caselist").html("");
              $.each(select(),function(i,e){
                $("ul#caselist").append("<li>"+$("#tr_"+e+" td").eq(0).text()+"</li>");
              })
            })
        -else
          :javascript
            $(document).ready(function(){
              $('#sortme').tablesorter({
                headers: { 
                  6: { sorter: false }
                } 
              });
              var theTable = $('table#sortme')
              $("#filter").click(function(){$('#filter').focus();});
              $("#filter").keyup(function() {
                $.uiTableFilter( theTable, this.value );
              })
              $('#filter-form').submit(function(){
                return false;
              }).focus(); 
            });
