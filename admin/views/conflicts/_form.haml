-# coding: utf-8
-content_for :include do
  =stylesheet_link_tag 'neutrino/jquery-ui'
  -#<script src="https://maps.google.com/maps/api/js?v=3&sensor=false"></script>
  -#<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRWYWYBQyJTaXMVbcu1M9b_TKOTJVcp0w"></script>
  =javascript_include_tag 'map-edit'

#fixed{:style=>"position:fixed; top: 24px; right:24px; transition:250; z-index: 9999"}
  -#alert-success.alert.alert-success.alert-dismissable.fade.in{:role=>"alert"}
    %button.close{:type=>"button","data-dismiss"=>"alert","aria-label"=>"Close"}
      %span{"aria-hidden"=>true} x
    Conflict saved successfully. &nbsp; &nbsp;

  -#alert-error.alert.alert-danger.alert-dismissable.fade.in{:role=>"alert"}
    %button.close{:type=>"button","data-dismiss"=>"alert","aria-label"=>"Close"}
      %span{"aria-hidden"=>true} x
    Conflict could not be saved. Please try again. &nbsp; &nbsp;

%ul#conflict-tabs.nav.nav-tabs{:style=>'margin-bottom:0'}
  %li.active
    %a{:href=>'#basic'}=UnicodeUtils.upcase( t("f.conflict.basic_data"),I18n.locale)#.split(/\s+/)[0]
  -if @example or not @conflict.new_record? 
    %li
      %a{:href=>'#source'}=UnicodeUtils.upcase( t("f.conflict.source_of_conflict"),I18n.locale)#.split(/\s+/)[0]
    %li
      %a{:href=>'#project'}=UnicodeUtils.upcase( t("f.conflict.project_details"),I18n.locale)#.split(/\s+/)[0]
    %li
      %a{:href=>'#conflict'}=UnicodeUtils.upcase( t("f.conflict.conflict_and_mobilization"),I18n.locale)#.split(/\s+/)[0]
    %li
      %a{:href=>'#impacts'}=UnicodeUtils.upcase( t("f.conflict.impacts_project"),I18n.locale)#.split(/\s+/)[0]
    %li
      %a{:href=>'#outcome'}=UnicodeUtils.upcase( t("f.conflict.outcome"),I18n.locale)#.split(/\s+/)[0]
    %li
      %a{:href=>'#materials'}=UnicodeUtils.upcase( t("f.conflict.sources_and_materials"),I18n.locale)#.split(/\s+/)[0]
    %li
      %a{:href=>'#meta'}=UnicodeUtils.upcase( t("f.conflict.meta_information"),I18n.locale)#.split(/\s+/)[0]


.tab-content.whitebox
  #basic.tab-pane.active
    .row
      .col-md-10
        %p.lead= t("f.conflict.basic_data")
      .col-md-2
        .pull-right.btn-group.png
          -unless @conflict.new_record?
            %button.btn.pn.next= t("f.conflict.next")
          %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
          %br/

    .row
      .col-md-6
        %p.description
          ~ t("f.conflict.fields_marked_with_are_required").sub("*","<span class='required large'>*</span>").html_safe

        .group
          %label{:for=>"conflict_name"}= t("f.conflict.name_of_conflict")
          %span.required.large *
          %p.description= t("f.conflict.eg_company_or_community_name")
          .required=f.error_message_on :name
          =f.text_field :name, :class => 'text_field basic_input'

        -if current_account and ["admin","editor"].include? current_account.role
          .group
            %label{:for=>"conflict_slug"}= t("f.conflict.name_visible_on_address_bar")
            %span.required.large *
            .required=f.error_message_on :slug
            =f.text_field :slug, :class => 'text_field basic_input'
        -else
          .group
            -slug = @conflict.slug
            -slug == nil or slug == "" ? slug = Admin.slugify(@conflict.name) : slug = nil
            -if slug
              %input#conflict_slug.text_field.basic_input{:type=>"hidden", :name=>"conflict[slug]",:value=>slug}

        .group
          %label{:for=>"conflict_country_id"}= t("f.conflict.country")
          %span.required.large *
          .required=f.error_message_on :country_id
          -#=f.select :country_id, :collection => $countries, :fields => [:name, :id], :include_blank => true, :class=>'basic_input'
          %select.basic_input#conflict_country_id{:name=>"conflict[country_id]"}
            %option
            -$countries.each do |c|
              %option{:value=>c.id,:selected=>c.id==@conflict.country_id}=t("countries.#{c.name.slug("_").shorten_en}")


        .group
          %input#general{:type=>'checkbox',:name=>"conflict[general]", :checked=>(@conflict.general ? true : false)}=" &nbsp; #{t("f.conflict.this_is_country_wide_conflict")}".html_safe

          :javascript

            $('#general').on('change',function(){
              if ($(this).prop('checked')) {
                $('.local_fade').fadeOut();
                $('.local_fade input[type=text]').val('');
                $('.local_fade input[type=radio]:checked').prop('checked',false)
                $('#map').animate({opacity:0});
              } else {
                $('.local_fade').fadeIn();
                $('#map').animate({opacity:1});
              }
            })

        .group.local_fade
          %label{:for=>"conflict_site"}= t("f.conflict.location_of_conflict")
          %p.description= t("f.conflict.municipality_or_city_town")
          .required=f.error_message_on :site
          =f.text_field :site, :class => 'text_field'

        .group.local_fade
          %label{:for=>"conflict_province"}= t("f.conflict.state_or_province")
          .required=f.error_message_on :province
          =f.text_field :province, :class => 'text_field'

          .col-md-4
            .group
              .required=f.error_message_on :accuracy_level
              %label{:for=>"conflict_accuracy_level"}= t("f.conflict.accuracy_of_location")
              %label.checkbox.inline.acc_lvl
                %input.local_disable.mustcheck.acclvl{:type=>'radio',:value=>'1',:name=>'conflict[accuracy_level]'}=" &nbsp;#{t("m.accuracy_level.low_country_level")}".html_safe
              %label.checkbox.inline.acc_lvl
                %input.local_disable.mustcheck.acclvl{:type=>'radio',:value=>'2',:name=>'conflict[accuracy_level]'}=" &nbsp;#{t("m.accuracy_level.medium_regional_level")}".html_safe
              %label.checkbox.inline.acc_lvl
                %input.local_disable.mustcheck.acclvl{:type=>'radio',:value=>'3',:name=>'conflict[accuracy_level]'}=" &nbsp;#{t("m.accuracy_level.high_local_level")}".html_safe
              -if acclvl = @conflict.accuracy_level
                :javascript
                  $('input.acclvl[value=#{acclvl}]').prop('checked',true);
            %br/

          .col-md-4
            .group
              %label{:for=>"conflict_project_area"}= t("f.conflict.project_area")
              %p.description= t("f.conflict.in_hectares_in_this_format")
              .required=f.error_message_on :project_area
              =f.text_field :project_area, :class => 'text_field'


        .row
          .col-md-4
            .group
              .required=f.error_message_on :population_type
              %label{:for=>"conflict_population_type"}= t("f.conflict.type_of_population")
              %label.checkbox.inline.pop_type
                %input.local_disable.mustcheck.poptype{:type=>'radio',:value=>'0',:name=>'conflict[population_type]'}=" &nbsp;#{t("m.population_type.unknown")}".html_safe
              %label.checkbox.inline.pop_type
                %input.local_disable.mustcheck.poptype{:type=>'radio',:value=>'1',:name=>'conflict[population_type]'}=" &nbsp;#{t("m.population_type.urban")}".html_safe
              %label.checkbox.inline.pop_type
                %input.local_disable.mustcheck.poptype{:type=>'radio',:value=>'2',:name=>'conflict[population_type]'}=" &nbsp;#{t("m.population_type.semi_urban")}".html_safe
              %label.checkbox.inline.pop_type
                %input.local_disable.mustcheck.poptype{:type=>'radio',:value=>'3',:name=>'conflict[population_type]'}=" &nbsp;#{t("m.population_type.rural")}".html_safe
              -if poptype = @conflict.population_type
                :javascript
                  $('input.poptype[value=#{poptype}]').prop('checked',true);
            %br/

      .col-md-6
        .group.local_fade
          %span= t("f.conflict.latitude")
          %span#maplat.large.hide
          =f.text_field :lat, :class => 'text_field', :id => :imaplat
          %span= t("f.conflict.longitude")
          %span#maplon.large.hide
          =f.text_field :lon, :class => 'text_field', :id => :imaplon
          %br/
          %p.description 
            =t("f.conflict.please_point_to_location_conflict")
        .group
          #map

    -if @conflict.general
      :javascript
        $('.local_fade').hide();
        $('#map').css('opacity',0);


    .row
      .col-md-10
        %p &nbsp;
      .col-md-2
        .pull-right.btn-group.png
          -unless @conflict.new_record?
            %button.btn.pn.next= t("f.conflict.next")
          %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
          %br/


  -if @example or not @conflict.new_record?
    #source.tab-pane
      .row
        .col-md-9
          %p.lead=t("f.conflict.source_of_conflict")
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/

      .row
        .col-md-5
          .group
            %label{:for=>"conflict_category_id"}= t("f.conflict.type_conflict_1st_level")
            %span.required.large *
            %p.description= t("f.conflict.pick_one_based_on_activity")
            .required=f.error_message_on :category_id
            -#=f.select :category_id, :collection => $categories, :fields => [:name, :id], :include_blank => true, :id => 'category', :class => 'basic_input'
            %select.basic_input#conflict_category_id{:name=>"conflict[category_id]"}
              %option
              -$categories.each do |c|
                %option{:value=>c.id,:selected=>c.id==@conflict.category_id}=t("m.category_id.#{c.name.slug("_")}")


        .col-md-6
          .group
            %label{:for=>"conflict_type"}= t("f.conflict.type_conflict_2nd_level")
            %span.required.large *
            %p.description=t("f.conflict.select_all_relevant_does_not")
            .types
              -if @conflict.types.any?
                .required=f.error_message_on "type_#{@conflict.c_types.order('ordering').first.type_id}"
                -@conflict.c_types.order('ordering').each_with_index do |type,i|
                  %select.type.basic_input{:name=>"type_#{type.type_id}",:id=>"type_#{i}"}= $alltypeoptions.html_safe
                  %br/
                  %br/
            %a#add_type.notr{:style=>'cursor:pointer',:onclick=>'addType()'}=t("f.conflict.add_another_type")
            %br/
            %br/
            %label{:for=>"conflict_other_types"}= t("f.conflict.other_types_conflict")
            %p.description= t("f.conflict.please_insert_other_types_conflict")
            ~f.text_area :other_types, :class => 'text_area', :rows=>1, :id => 'other_types'
        :javascript
          $(document).ready(function(){
            $('#category option[value=11]').remove();
            $.getJSON("/data/types-#{I18n.locale}.json",function(data){
              types = data[0];
              alltypes = data[1];
              categories = #{$categories.to_json.html_safe}
              cats = {};
              $.each(categories, function(i,v){
                cats[v['category']['id']] = {name: v['category']['name'], types: []};
              });
              $.each(alltypes, function(i,v){
                type = v['type'];
                cats[type['category_id']]['types'].push([type['id'],type['name']])
              });
            });
            if ($('#product_57').prop('checked')==false) {
              $('#other_products').hide();
            }
            if ($('#mobilizing_group_21').prop('checked')==false) {
              $('#other_mobilizing_groups').hide();
            }
            if ($('#mobilizing_form_28').prop('checked')==false) {
              $('#other_mobilizing_forms').hide();
            }
          });
          function addType () {
            id = $('.types select').length;
            sel = document.createElement('select');
            $(sel).attr('id', 'type_'+id);
            $(sel).attr('class', 'type basic_input');
            $(sel).html("#{$alltypeoptions.html_safe}");
            $('.types').append(sel);
            $('.types').append('<br/><br/>');
          }
          function setMainType () {
            chosen = $("#category option:selected").val();
            if (chosen == '' ) { 
              chosen = 0; 
            }
            typeoptions = '<option value="0">&nbsp;</option>\n';
            $.each(types[chosen], function(i,v){
              type = v['type'];
              typeoptions += '<option value="'+type['id']+'">'+type['name']+'</option>\n';
            });
            $('#type_0').html(typeoptions);
          }
          $('#category').change(function () {
          //setMainType();
          });
          $('.types').on('change','.type',function () {
            $(this).attr('name','type_'+$(this).val());
          });
      -#if @conflict.category
        :javascript
          $(document).ready(function(){
            setMainType();
          });
      -@conflict.c_types.order('ordering').each_with_index do |ct,i|
        :javascript
          $(document).ready(function(){
            $('.type').eq(#{i}).val(#{ct.type_id})
          });


      .row
        .col-md-4
          .group
            %label{:for=>"conflict_desciption"}= t("f.conflict.description")
            %span.required.large *
            .required=f.error_message_on :description
            %p.description= t("f.conflict.please_describe_project_point_conflict")
            -#~f.text_area :description, :class => 'text_area basic_input', :rows => 17
            %textarea#conflict_description.text_area.basic_input{:name=>"conflict[description]",:rows=>17}= "<p>#{(@conflict.description || "").gsub(/(\s\s+|\n+)+/,"</p><p>")}</p>"

        .col-md-8
          .group
            %label{:for=>"conflict_product_id"}= t("f.conflict.specific_commodities")
            %span.required.large *
            .required=f.error_message_on :product_id
            %br/
            %p.description= t("f.conflict.check_multiple_if_necessary")
            %table{:style=>'width:100%'}
              %tbody
                -$products.each_with_index do |p,i|
                  -if i%4 == 0
                    %tr
                  %td.quart
                    %input{:type=>'checkbox',:name=>'product_'+p.id.to_s,:id=>'product_'+p.id.to_s,:class=>'mustcheck product_cb'}
                    %label= t("m.products.#{p.name.slug("_")}")
            ~f.text_area :other_products, :class => 'text_area', :rows=>1, :id => 'other_products'
            - pids = @conflict.products.map &:id
            :javascript
              var ta_width;
              $('#product_57').change(function(){
                if ($(this).prop('checked')=='checked' || $(this).prop('checked')==true) {
                  $('#other_products').slideDown(100,function(){this.focus()});
                } else {
                  $('#other_products').slideUp(200);
                  $('#other_products').val('');
                }
              });
              pids = #{pids}
              $.each(pids, function(i,pid){
                $('#product_'+pid).attr('checked','checked');
              })
            -if I18n.locale.to_sym != :ar
              :javascript
                bkLib.onDomLoaded(function() {
                  nicEditors.editors.push(
                    new nicEditor({buttonList:['bold','italic','','link','unlink']}).panelInstance("conflict_description")
                  );
                  window.setTimeout(niceWidth,1000);
                });
                function niceWidth(){
                  ta_width = $(".tab-pane.active .row").width() / 3 - 15;
                  console.log(ta_width)
                  $("ul#conflict-tabs li a").on('shown.bs.tab',function(e){
                    console.log(ta_width)
                    item = $($(e.target).attr('href')).find(".group textarea#conflict_description").parent();
                    item.find("div").not(".nicEdit-buttonContain,.nicEdit-button,.nicEdit-button-undefined,.nicEdit-panel>div").css("width",ta_width);
                    item.find("div.nicEdit-main").css("width",ta_width-8).css("min-height",114);
                    item.find("div.nicEdit-panelContain").css("width",ta_width);
                  })
                }


      .row
        .col-md-9
          %p &nbsp;
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/



    #project.tab-pane
      .row
        .col-md-9
          %p.lead= t("f.conflict.project_details_actors")
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/

      .row
        .col-md-5
          .group
            %label{:for=>"conflict_project_retails"}= t("f.conflict.project_details")
            .required=f.error_message_on :project_details
            %p.description=t("f.conflict.please_insert_specific_details_on")
            ~f.text_area :project_details, :class => :text_area, :rows=>17

        .col-md-4
          .group
            %label{:for=>"conflict_investment_string"}=t("f.conflict.level_of_investment")
            .required=f.error_message_on :investment_string
            %p.description=t("f.conflict.please_enter_in_usd_in")
            =f.text_field :investment_string, :class => :text_field

        .col-md-4
          .group
            %label{:for=>"conflict_affected_people"}=t("f.conflict.affected_population")
            %p.description=t("f.conflict.it_may_also_be_range")
            .required=f.error_message_on :affected_people
            =f.text_field :affected_people, :class => :text_field, :maxlength => 255
          %br/
          %br/

      -content_for :outer do
        #actor.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
      .row
        .col-md-5
          .group
            %label=t("f.conflict.company_names_or_state_enterprises")
            .row
              .col-md-10
                %p.description=t("f.conflict.please_use_button_on_right")
              .col-md-2
                %button#n_company.btn.btn-inverse.notr{'data-toggle'=>'modal','data-target'=>'#actor',:href=>"/conflicts/modal/#{@conflict.id}/company"}=t("f.conflict.add")
            %br/
            .company_list
              -@conflict.companies.each do |l|
                .actor
                  %hr.notr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #ccc;'}/
                  .row{:style=>'margin-top:8px;'}
                    .col-md-8
                      %h5="#{l.name}"
                    .col-md-2
                      %a.pull-right.btn.notr{'data-toggle'=>'modal','data-target'=>'#actor',:href=>"/conflicts/modal/#{@conflict.id}/company/#{l.id}"}=t("f.conflict.edit")
                    .col-md-2
                      %input{:type=>'hidden',:value=>l.id}
                      %a.d_actor.pull-right.btn.notr=t("f.conflict.remove")
            %hr/

          .group
            %br/
            %label{:for=>"conflict_govt_actors"}= t("f.conflict.relevant_government_actors")
            .required=f.error_message_on :government_actor_id
            %br/
            %textarea#conflict_govt_actors.text-area{:rows=>4,:name=>'conflict[govt_actors]'}=@conflict.govt_actors

        .col-md-5
          .group
            %label= t("f.conflict.international_finance_institutions")
            .row
              .col-md-10
                %p.description=t("f.conflict.please_use_button_on_right")
              .col-md-2
                %button#n_supporter.btn.btn-inverse.notr{'data-toggle'=>'modal','data-target'=>'#actor',:href=>"/conflicts/modal/#{@conflict.id}/supporter"}=t("f.conflict.add")
            %br/
            .supporter_list
              -@conflict.supporters.each do |l|
                .actor
                  %hr.notr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #ccc;'}/
                  .row{:style=>'margin-top:8px;'}
                    .col-md-8
                      %h5="#{l.name}"
                    .col-md-2
                      %a.pull-right.btn.notr{'data-toggle'=>'modal','data-target'=>'#actor',:href=>"/conflicts/modal/#{@conflict.id}/supporter/#{l.id}"}=t("f.conflict.edit")
                    .col-md-2
                      %input{:type=>'hidden',:value=>l.id}
                      %a.d_actor.pull-right.btn.notr=t("f.conflict.remove")
            %hr/

            :javascript
              $(document).ready(function(){
                $('.d_actor').live('click', function(e){
                  par = $(this).closest('.actor');
                  id = par.children('div').children('div').children('input').val();
                  model = par.parent().attr('class').replace('_list','')
                  html = '<input name="'+model+'_remove_'+id+'" type="hidden"></input>';
                  par.html(html);
                });
              });


          .group
            %br/
            %label{:for=>"conflict_ejos"}= t("f.conflict.environmental_justice_organizations_other_supporters")
            .required=f.error_message_on :justice_party_id
            %br/
            %textarea#conflict_ejos.text-area{:rows=>4,:name=>'conflict[ejos]'}=@conflict.ejos

      .row
        .col-md-9
          %p &nbsp;
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/


    #conflict.tab-pane
      .row
        .col-md-9
          %p.lead=t("f.conflict.conflict_and_mobilization")
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/

      .row
        .col-md-9
          .group
            %label{:for=>"conflict_status_id"}= t("f.conflict.intensity_of_conflict")
            .required=f.error_message_on :status_id
            %p.description= t("f.conflict.at_highest_level")
            -#=f.select :status_id, :collection => $statuses, :fields=>[:name, :id], :include_blank => true, :id => 'status_id', :class => 'basic_input'
          %select.basic_input#conflict_status_id{:name=>"conflict[status_id]"}
            %option
            -$statuses.each do |c|
              %option{:value=>c.id,:selected=>c.id==@conflict.status_id}=t("m.status_id.#{c.name.slug("_")}")


          .group
            %label{:for=>"conflict_reaction_id"}= t("f.conflict.when_did_mobilization_begin")
            .required=f.error_message_on :reaction_id
            -#=f.select :reaction_id, :collection => $reactions, :fields=>[:name, :id], :include_blank => true, :id => 'reaction_id', :class => 'basic_input'
          %select.basic_input#conflict_reaction_id{:name=>"conflict[reaction_id]"}
            %option
            -$reactions.each do |c|
              %option{:value=>c.id,:selected=>c.id==@conflict.reaction_id}=t("m.reaction_id.#{c.name.slug("_")}")


          -unless @conflict.new_record?
            .group
              %label= t("f.conflict.is_this_conflict_directly_related")
              .required=f.error_message_on :related_conflict_id
              %p.description=t("f.conflict.please_enter_name_conflict_as")
              .clearfix
                %input#related.autocomplete{:type=>'text','data-source'=>'relateds'}
              %br/
              %ul.autoc
                -@conflict.related.each do |rel|
                  %li{:id=>"related_#{rel.id}"}
                    %span= rel.name
                    %a{:style=>'cursor:pointer',:onclick=>"remove_li('related',#{rel.id})"} Remove
                    &nbsp;
                    %input{:type=>"hidden",:name=>"related_add_#{rel.id}"}


        .col-md-3
          .group
            %label{:for=>"conflict_start_date"}= t("f.conflict.start_conflict")
            %span.required.large *
            .required=f.error_message_on :start_date
            =f.text_field :start_date, :class => 'text_field conflict_input datemask', :value => ( @conflict.get_start_date if @conflict.start_date )

          .group
            %label{:for=>"conflict_end_date"}= t("f.conflict.end_conflict")
            %p.description=t("f.conflict.leave_blank_if_ongoing")
            =f.text_field :end_date, :class => 'text_field datemask', :value => ( @conflict.get_end_date if @conflict.end_date )


      .row
        .col-md-12
          .group
            %br/
            %label{:for=>"conflict_mobilizing_groups"}= t("f.conflict.groups_mobilizing")
            %p.description= t("f.conflict.check_all_that_apply")
            %table{:style=>'width:100%'}
              %tbody
                -$mobgroups.each_with_index do |p,i|
                  -if i%3 == 0
                    %tr
                  %td.third
                    %input{:type=>'checkbox',:name=>'mobilizing_group_'+p.id.to_s,:id=>'mobilizing_group_'+p.id.to_s,:class=>'mustcheck mobilizing_group_cb'}
                    %label= t("m.mobilizing_groups.#{p.name.slug("_")}")
            =f.text_area :other_mobilizing_groups, :class => 'text_area', :rows=>1, :id => :other_mobilizing_groups
            :javascript
              $('#mobilizing_group_21').change(function(){
                if ($(this).prop('checked')=='checked' || $(this).prop('checked')==true) {
                  $('#other_mobilizing_groups').slideDown(100,function(){this.focus()});
                } else {
                  $('#other_mobilizing_groups').slideUp(200);
                  $('#other_mobilizing_groups').val('');
                }
              });
            -@conflict.mobilizing_groups.each do |m|
              :javascript
                $('#mobilizing_group_#{m.id}').attr('checked','checked');
            %br/
            %br/

          .group
            %label{:for=>"conflict_mobilizing_forms"}= t("f.conflict.forms_of_mobilization")
            %p.description= t("f.conflict.check_all_that_apply")
            %table#mobform{:style=>'width:100%'}
              %tbody
                -$mobforms.each_with_index do |p,i|
                  -if i%3 == 0
                    %tr
                  %td.third
                    %input{:type=>'checkbox',:name=>'mobilizing_form_'+p.id.to_s,:id=>'mobilizing_form_'+p.id.to_s,:class=>'mustcheck mobilizing_form_cb'}
                    %label= t("m.mobilizing_forms.#{p.name.slug("_")}")
            =f.text_area :other_mobilizing_forms, :class => 'text_area', :rows=>1, :id => :other_mobilizing_forms
            :javascript
              $('#mobilizing_form_28').change(function(){
                if ($(this).prop('checked')=='checked' || $(this).prop('checked')==true) {
                  $('#other_mobilizing_forms').slideDown(100,function(){this.focus()});
                } else {
                  $('#other_mobilizing_forms').slideUp(200);
                  $('#other_mobilizing_forms').val('');
                }
              });
            -@conflict.mobilizing_forms.each do |m|
              :javascript
                $('#mobilizing_form_#{m.id}').attr('checked','checked');
            %br/
            %br/

      .row
        .col-md-9
          %p &nbsp;
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/


    #impacts.tab-pane
      .row
        .col-md-9 &nbsp;
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/

      .row
        .col-md-12
          %p.lead= t("f.conflict.impacts_project")
          .group.row
            .col-md-3
              %label{:for=>"conflict_env_impact_id"}= t("m.env_impacts.environmental_impacts")
              .required=f.error_message_on :env_impact_id
            .col-md-9
              %table.imptab{:style=>'width:100%'}
                %thead
                  -3.times do |i|
                    %th.implab{:valign=>'bottom',:style=>'padding-left:0;text-align:left;border:none;'}
                      -if i==0
                        %span.small= t("f.conflict.visible_potential")
                      &nbsp;
                    %th.imprad{:valign=>'bottom'}
                      = t("f.conflict.v")
                    %th.imprad{:valign=>'bottom'}
                      = t("f.conflict.p")
                %tbody
                  -$impacts[0].each_with_index do |p,i|
                    -if i%3 == 0
                      %tr
                    %td.implab{:valign=>'bottom'}
                      %label= t("m.env_impacts.#{p.name.slug("_")}")
                    %td.imprad{:valign=>'bottom'}
                      %input.desrad{:type=>'radio',:name=>'env_radio_'+p.id.to_s,:id=>'env_radio_'+p.id.to_s+'_g',:value=>'g'}
                    %td.imprad{:valign=>'bottom'}
                      %input.desrad{:type=>'radio',:name=>'env_radio_'+p.id.to_s,:id=>'env_radio_'+p.id.to_s+'_p',:value=>'p'}
                -@conflict.c_env_impacts.each do |m|
                  -m.visible ? s='_g' : s='_p'
                  :javascript
                    $('#env_radio_#{m.env_impact_id.to_s+s}').attr('checked',true);
          %br/
          .group.row
            .col-md-3 &nbsp;
            .col-md-9
              %label{:for=>"conflict_other_env_impacts"}= t("m.env_impacts.other_environmental_impacts")
              .required=f.error_message_on :other_env_impacts
              ~f.text_area :other_env_impacts, :class => :text_area
          %hr/

          .group.row
            .col-md-3
              %label{:for=>"conflict_hlt_impact_id"}= t("m.hlt_impacts.health_impacts")
              .required=f.error_message_on :hlt_impact_id
            .col-md-9
              %table.imptab{:style=>'width:100%'}
                %thead
                  -3.times do |i|
                    %th.implab{:valign=>'bottom',:style=>'padding-left:0;text-align:left;border:none;'}
                      -if i==0
                        %span.small= t("f.conflict.visible_potential")
                      &nbsp;
                    %th.imprad{:valign=>'bottom'}
                      = t("f.conflict.v")
                    %th.imprad{:valign=>'bottom'}
                      = t("f.conflict.p")
                %tbody
                  -$impacts[1].each_with_index do |p,i|
                    -if i%3 == 0
                      %tr
                    %td.implab{:valign=>'bottom'}
                      %label= t("m.hlt_impacts.#{p.name.slug("_")}")
                    %td.imprad{:valign=>'bottom'}
                      %input.desrad{:type=>'radio',:name=>'hlt_radio_'+p.id.to_s,:id=>'hlt_radio_'+p.id.to_s+'_g',:value=>'g'}
                    %td.imprad{:valign=>'bottom'}
                      %input.desrad{:type=>'radio',:name=>'hlt_radio_'+p.id.to_s,:id=>'hlt_radio_'+p.id.to_s+'_p',:value=>'p'}
                -@conflict.c_hlt_impacts.each do |m|
                  -m.visible ? s='_g' : s='_p'
                  :javascript
                    $('#hlt_radio_#{m.hlt_impact_id.to_s+s}').attr('checked',true);
          %br/
          .group.row
            .col-md-3 &nbsp;
            .col-md-9
              %label{:for=>"conflict_other_hlt_impacts"}= t("m.hlt_impacts.other_health_impacts")
              .required=f.error_message_on :other_hlt_impacts
              ~f.text_area :other_hlt_impacts, :class => :text_area
          %hr/

          .group.row
            .col-md-3
              %label{:for=>"conflict_sec_impact_id"}= t("m.sec_impacts.socio_economical_impacts")
              .required=f.error_message_on :sec_impact_id
            .col-md-9
              %table.imptab{:style=>'width:100%'}
                %thead
                  -3.times do |i|
                    %th.implab{:valign=>'bottom',:style=>'padding-left:0;text-align:left;border:none;'}
                      -if i==0
                        %span.small= t("f.conflict.visible_potential")
                      &nbsp;
                    %th.imprad{:valign=>'bottom'}
                      = t("f.conflict.v")
                    %th.imprad{:valign=>'bottom'}
                      = t("f.conflict.p")
                %tbody
                  -$impacts[2].each_with_index do |p,i|
                    -if i%3 == 0
                      %tr
                    %td.implab{:valign=>'bottom'}
                      %label= t("m.sec_impacts.#{p.name.slug("_")}")
                    %td.imprad{:valign=>'bottom'}
                      %input.desrad{:type=>'radio',:name=>'sec_radio_'+p.id.to_s,:id=>'sec_radio_'+p.id.to_s+'_g',:value=>'g'}
                    %td.imprad{:valign=>'bottom'}
                      %input.desrad{:type=>'radio',:name=>'sec_radio_'+p.id.to_s,:id=>'sec_radio_'+p.id.to_s+'_p',:value=>'p'}
                -@conflict.c_sec_impacts.each do |m|
                  -m.visible ? s='_g' : s='_p'
                  :javascript
                    $('#sec_radio_#{m.sec_impact_id.to_s+s}').attr('checked',true);
          %br/
          .group.row
            .col-md-3 &nbsp;
            .col-md-9
              %label{:for=>"conflict_other_sec_impacts"}= t("m.sec_impacts.other_socio_economic_impacts")
              .required=f.error_message_on :other_sec_impacts
              ~f.text_area :other_sec_impacts, :class => :text_area
          %br/

      .row
        .col-md-9
          %p &nbsp;
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/


          :javascript
            $(document).ready(function(){
              $('.desrad').live('click', function() { 
                var previousValue = $(this).attr('previousValue');
                if(previousValue == 'true'){
                  $(this).prop('checked', false)
                }
                $('input[name='+$(this).attr('name')+']').attr('previousValue', false)
                $(this).attr('previousValue', $(this).prop('checked'));
              });
            });

    #outcome.tab-pane
      .row
        .col-md-9
          %p.lead=t("f.conflict.outcome")
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/

      .row
        .col-md-4
          .group
            %br/
            %label{:for=>"conflict_project_status"}= t("f.conflict.current_status_project_development")
            .required=f.error_message_on :project_status
            %table{:style=>'width:100%'}
              %tbody
                -ps = @conflict.project_status.id unless @conflict.project_status.nil?
                -$project_statuses.each_with_index do |p,i|
                  %tr
                    %td
                      %input{:type=>'radio',:name=>'project_status',:id=>'project_status_'+p.id.to_s,:value=>p.id.to_s, :checked=>('checked' if ps and i==ps-1)}
                      %label= t("m.project_status_id.#{p.name.slug("_")}");
            %br/
            %br/

          .group
            %label{:for=>"conflict_suggested_alternatives"}= t("f.conflict.development_of_alternatives")
            %p.description=t("f.conflict.please_specify_what_are_proposals")
            ~f.text_area :suggested_alternatives, :class => :text_area, :rows=>9
            %br/
            %br/

          .group
            .required=f.error_message_on :success_level
            %label{:for=>"conflict_success_level"}= t("f.conflict.do_you_consider_this_an")
            %br/
            %table{:style=>'width:100%'}
              %tbody
                %tr
                  %td
                    %label.inline.suc_lvl
                      %input.local_disable.mustcheck.suclvl{:type=>'radio',:value=>'0',:name=>'conflict[success_level]'}=" &nbsp;#{t("f.conflict.yes")}".html_safe
                %tr
                  %td
                    %label.inline.suc_lvl
                      %input.local_disable.mustcheck.suclvl{:type=>'radio',:value=>'2',:name=>'conflict[success_level]'}=" &nbsp;#{t("f.conflict.no")}".html_safe
                %tr
                  %td
                    %label.inline.suc_lvl
                      %input.local_disable.mustcheck.suclvl{:type=>'radio',:value=>'1',:name=>'conflict[success_level]'}=" &nbsp;#{t("f.conflict.not_sure")}".html_safe
            -if suclvl = @conflict.success_level
              :javascript
                $('input.suclvl[value=#{suclvl}]').prop('checked',true);
          %br/

          .group
            %label{:for=>"conflict_success_reason"}= t("f.conflict.briefly_explain")
            .required=f.error_message_on :success_reason
            ~f.text_area :success_reason, :class => :text_area, :rows=>6


        .col-md-8
          .group
            %br/
            %label{:for=>"conflict_conflict_event_id"}= t("f.conflict.conflict_outcome_response")
            %p.description=t("f.conflict.check_all_outcomes_that_apply")
            %table{:style=>'width:100%'}
              %tbody
                -$conflict_events.each_with_index do |p,i|
                  -if i%2 == 0
                    %tr
                  %td.half
                    %input{:type=>'checkbox',:name=>'conflict_event_'+p.id.to_s,:id=>'conflict_event_'+p.id.to_s,:class=>'mustcheck conflict_event_cb'}
                    %label= t("m.conflict_events.#{p.name.slug("_")}")
            ~f.text_area :other_outcomes, :class => 'text_area', :rows=>1, :id => 'other_outcomes'
            :javascript
              $('#conflict_event_26').change(function(){
                if ($(this).prop('checked')=='checked' || $(this).prop('checked')==true) {
                  $('#other_outcomes').slideDown(100,function(){this.focus()});
                } else {
                  $('#other_outcomes').slideUp('slow');
                  $('#other_outcomes').val('');
                }
              });
            -@conflict.conflict_events.each do |m|
              :javascript
                $('#conflict_event_#{m.id}').attr('checked','checked');
            %br/


      .row
        .col-md-9
          %p &nbsp;
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/



    #materials.tab-pane
      :javascript
        function handleModal(model) {
          $('#m_'+model).on('hidden.bs.modal', function () {
            $('.i_'+model).val('');
            $('#b_'+model).removeClass('disabled');
          })
          $('#m_'+model).on('shown.bs.modal', function() {
            $('#'+model+'_description').focus();
          });
          $('.d_'+model).live('click', function(e){
            par = $(this).closest('.'+model);
            id = par.find('textarea').attr('name').split('_')[2];
            html = '<input name="'+model+'_remove_'+id+'" type="hidden"></input>';
            par.html(html);
          });
          $('#b_'+model).click(function(e){
            if ($('#'+model+'_description').val()=='') {
              $('#'+model+'_description').focus();
              return
            }
            $('#b_'+model).addClass('disabled');
            e.preventDefault();
            modeldata = {
              'description': $('#'+model+'_description').val(),
              'url': $('#'+model+'_url').val(),
              'conflict_id': '#{@conflict.id.to_s}'
            }
            if ('#{@example}') {
              html = '<div class="'+model+'"> <hr style="margin:2px 0 6px;border-bottom: 2px solid #ccc;"> <div class="row" style="margin-top:8px;"> <div class="col-md-10"> <textarea name="'+model+'_description_'+'+model+'['id']+'">'+'+model+'['description']+'</textarea> </div> <div class="col-md-2"> <a class="d_'+model+' pull-right btn">Remove</a> </div> </div> <input name="'+model+'_url_'+'+model+'['id']+'" placeholder="http://" style="width:98%" type="text" value="'+'+model+'['url']+'"> </div> ';
              $('#current_'+model+'s').append(html);
              $('#b_'+model).removeClass('disabled');
              $('#m_'+model).modal('hide');
            } else {
              $.ajax({
                type: 'POST',
                url: '/conflicts/'+model, 
                data: modeldata, 
                success: function(data,ts){
                  dat = JSON.parse(data)[''+model];
                  //console.log(dat)
                  html = '<div class="'+model+'"> <hr style="margin:2px 0 6px;border-bottom: 2px solid #ccc;"> <div class="row" style="margin-top:8px;"> <div class="col-md-10"> <textarea name="'+model+'_description_'+dat['id']+'">'+dat['description']+'</textarea> </div> <div class="col-md-2"> <a class="d_'+model+' pull-right btn">Remove</a> </div> </div> <input name="'+model+'_url_'+dat['id']+'" placeholder="http://" style="width:98%" type="text" value="'+dat['url']+'"> </div> ';
                  $('#current_'+model+'s').append(html);
                  $('#b_'+model).removeClass('disabled');
                  $('#m_'+model).modal('hide');
                },
                error: function(data,ts,error){
                  alert(ts+' '+error)
                }
              });
            }
          });
        }
      .row
        .col-md-9
          %p.lead= t("f.conflict.sources_and_materials")
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button.btn.pn.next= t("f.conflict.next")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/


      .row
        .col-md-6
          #m_legislation.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
            .modal-dialog
              .modal-content
                %form
                  .modal-header
                    %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
                    %h3=t("f.conflict.related_legislation")
                  .modal-body
                    %label=t("f.conflict.name_description_legislation")
                    %textarea.i_legislation#legislation_description{:type=>'text',:name=>'legislation_description'}
                    %br/
                    %label=t("f.conflict.address")
                    %input.i_legislation#legislation_url{:type=>'text',:name=>'legislation_url',:placeholder=>'http://'}
                    %br/
                    %br/
                  .modal-footer
                    %a.btn#b_legislation=t("f.conflict.create")
          .group
            .row
              .col-md-12
                %label=t("f.conflict.related_laws_legislations_juridical_texts")
                %a#n_legislation.btn.pull-right.notr{'data-toggle'=>'modal','data-target'=>'#m_legislation'}=t("f.conflict.add")
            #current_legislations
              -@conflict.legislations.where(:locale=>I18n.locale).order(:pid).each do |l|
                .legislation
                  %br
                  %hr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #666;'}/
                  -if @conflict.native_locale?
                    .row{:style=>'margin-top:8px;'}
                      .col-md-10
                        %textarea.yestr{:name=>'legislation_description_'+l.pid.to_s}= l.description
                      .col-md-2
                        %a.d_legislation.pull-right.btn.notr=t("f.conflict.remove")
                  -else
                    .row{:style=>'margin-top:8px;'}
                      .col-md-12
                        %p
                          %b="#{$iso639[@conflict.original_locale]}:"
                          = l.description
                    .row
                      .col-md-10
                        %textarea.yestr{:name=>'legislation_description_'+l.pid.to_s}= @conflict.legislations.where(:locale=>I18n.locale,:pid=>l.pid).any? ? @conflict.legislations.where(:locale=>I18n.locale,:pid=>l.pid)[0].description : ""
                      .col-md-2
                        %a.d_legislation.pull-right.btn.notr=t("f.conflict.remove")
                  %input{:type=>'text',:name=>'legislation_url_'+l.pid.to_s,:placeholder=>'http://',:style=>'width:98%',:value=>l.url}
                  %br/
            :javascript
              $(document).ready(function(){
                handleModal('legislation');
              });
            %hr/

          #m_weblink.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
            .modal-dialog
              .modal-content
                %form
                  .modal-header
                    %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
                    %h3=t("f.conflict.related_web_link")
                  .modal-body
                    %label=t("f.conflict.name_description_link_please_include")
                    %textarea.i_weblink#weblink_description{:type=>'text',:name=>'weblink_description'}
                    %br/
                    %label=t("f.conflict.address")
                    %input.i_weblink#weblink_url{:type=>'text',:name=>'weblink_url',:placeholder=>'http://'}
                    %br/
                    %br/
                  .modal-footer
                    %a.btn#b_weblink=t("f.conflict.create")
          .group
            .row
              .col-md-12
                %label=t("f.conflict.links_to_general_newspaper_articles")
                %a#n_weblink.btn.pull-right.notr{'data-toggle'=>'modal','data-target'=>'#m_weblink'}=t("f.conflict.add")
            #current_weblinks
              -@conflict.weblinks.where(:locale=>I18n.locale).order(:pid).each do |l|
                .weblink
                  %br
                  %hr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #666;'}/
                  -if @conflict.native_locale?
                    .row{:style=>'margin-top:8px;'}
                      .col-md-10
                        %textarea.yestr{:name=>'weblink_description_'+l.pid.to_s}= l.description
                      .col-md-2
                        %a.d_weblink.pull-right.btn.notr=t("f.conflict.remove")
                  -else
                    .row{:style=>'margin-top:8px;'}
                      .col-md-12
                        %p
                          %b="#{$iso639[@conflict.original_locale]}:"
                          = l.description
                    .row
                      .col-md-10
                        %textarea.yestr{:name=>'weblink_description_'+l.pid.to_s}= @conflict.weblinks.where(:locale=>I18n.locale,:pid=>l.pid).any? ? @conflict.weblinks.where(:locale=>I18n.locale,:pid=>l.pid)[0].description : ""
                      .col-md-2
                        %a.d_weblink.pull-right.btn.notr=t("f.conflict.remove")
                  %input{:type=>'text',:name=>'weblink_url_'+l.pid.to_s,:placeholder=>'http://',:style=>'width:98%',:value=>l.url}
                  %br/
          :javascript
              $(document).ready(function(){
                handleModal('weblink');
              });
          %hr/

          .group
            %label{:for=>"conflict_other_comments"}= t("f.conflict.other_comments")
            .required=f.error_message_on :other_comments
            ~f.text_area :other_comments, :class => :text_area, :rows=>4

        .col-md-6
          #m_reference.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
            .modal-dialog
              .modal-content
                %form
                  .modal-header
                    %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
                    %h3=t("f.conflict.related_reference")
                  .modal-body
                    %label=t("f.conflict.name_description_source_material")
                    %textarea.i_reference#reference_description{:type=>'text',:name=>'reference_description'}
                    %br/
                    %label=t("f.conflict.address")
                    %input.i_reference#reference_url{:type=>'text',:name=>'reference_url',:placeholder=>'http://'}
                    %br/
                    %br/
                  .modal-footer
                    %a.btn#b_reference=t("f.conflict.create")
          .group
            .row
              .col-md-12
                %label=t("f.conflict.references_to_published_books_academic")
                %a#n_reference.btn.pull-right.notr{'data-toggle'=>'modal','data-target'=>'#m_reference'}=t("f.conflict.add")
            #current_references
              -@conflict.references.where(:locale=>I18n.locale).order(:pid).each do |l|
                .reference
                  %br
                  %hr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #666;'}/
                  -if @conflict.native_locale?
                    .row{:style=>'margin-top:8px;'}
                      .col-md-10
                        %textarea{:name=>'reference_description_'+l.pid.to_s}= l.description
                      .col-md-2
                        %a.d_reference.pull-right.btn.notr=t("f.conflict.remove")
                  -else
                    .row{:style=>'margin-top:8px;'}
                      .col-md-12
                        %p
                          %b="#{$iso639[@conflict.original_locale]}:"
                          = l.description
                    .row
                      .col-md-10
                        %textarea.yestr{:name=>'reference_description_'+l.pid.to_s}= @conflict.references.where(:locale=>I18n.locale,:pid=>l.pid).any? ? @conflict.references.where(:locale=>I18n.locale,:pid=>l.pid)[0].description : ""
                      .col-md-2
                        %a.d_reference.pull-right.btn.notr=t("f.conflict.remove")
                  %input{:type=>'text',:name=>'reference_url_'+l.pid.to_s,:placeholder=>'http://',:style=>'width:98%',:value=>l.url}
                  %br/
            :javascript
              $(document).ready(function(){
                handleModal('reference');
              });
            %hr/


            #m_medialink.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
              .modal-dialog
                .modal-content
                  %form
                    .modal-header
                      %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
                      %h3=t("f.conflict.related_media")
                    .modal-body
                      %label=t("f.conflict.description_about_media")
                      %textarea.i_medialink#medialink_description{:type=>'text',:name=>'medialink_description'}
                      %br/
                      %label=t("f.conflict.address")
                      %input.i_medialink#medialink_url{:type=>'text',:name=>'medialink_url',:placeholder=>'http://'}
                      %br/
                      %br/
                    .modal-footer
                      %a.btn#b_medialink=t("f.conflict.add")
            .group
              .row
                .col-md-12
                  %label=t("f.conflict.related_media_links_to_videos")
                  %a#n_medialink.btn.pull-right.notr{'data-toggle'=>'modal','data-target'=>'#m_medialink'}=t("f.conflict.add")
              #current_medialinks
                -@conflict.medialinks.where(:locale=>I18n.locale).order(:pid).each do |l|
                  .medialink
                    %br
                    %hr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #666;'}/
                    -if @conflict.native_locale?
                      .row{:style=>'margin-top:8px;'}
                        .col-md-10
                          %textarea{:name=>'medialink_description_'+l.pid.to_s}= l.description
                        .col-md-2
                          %a.d_medialink.pull-right.btn.notr=t("f.conflict.remove")
                    -else
                      .row{:style=>'margin-top:8px;'}
                        .col-md-12
                          %p
                            %b="#{$iso639[@conflict.original_locale]}:"
                            = l.description
                      .row
                        .col-md-10
                          %textarea.yestr{:name=>'medialink_description_'+l.pid.to_s}= @conflict.medialinks.where(:locale=>I18n.locale,:pid=>l.pid).any? ? @conflict.medialinks.where(:locale=>I18n.locale,:pid=>l.pid)[0].description : ""
                        .col-md-2
                          %a.d_medialink.pull-right.btn.notr=t("f.conflict.remove")
                    %input{:type=>'text',:name=>'medialink_url_'+l.pid.to_s,:placeholder=>'http://',:style=>'width:98%',:value=>l.url}
                    %br/
              :javascript
                $(document).ready(function(){
                  handleModal('medialink');
                });
              %hr/

          -content_for :include do
            =javascript_include_tag 'upload_iframe'
          -content_for :outer do
            #m_document.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
              .modal-dialog
                .modal-content
                  %form
                    .modal-header
                      %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
                      %h3=t("f.conflict.another_document")
                    .modal-body
                      %label=t("f.conflict.name")
                      %input.i_document#document_title{:type=>'text',:name=>'document[title]'}
                      %br/
                      %label=t("f.conflict.description")
                      %textarea.i_document#document_description{:type=>'text',:name=>'document[description]'}
                      %br/
                      %label=t("f.conflict.file")
                      %br/
                      %input.i_document#document_file{:type=>'file',:name=>'document[file]'}
                      %input#document_file_cache{:type=>'hidden',:name=>'document[file_cache]'}
                      %input#document_conflict_id{:type=>'hidden',:name=>'document[conflict_id]',:value=>"#{@conflict.id}"}
                      %p
                        #upload
                    .modal-footer
                      %input.btn#b_document{:type=>'button',:onclick=>"fileUpload(this.form,'index.php','upload'); return false;",:value=>t("f.conflict.send")} 

          .group
            .row
              .col-md-12
                %label=t("f.conflict.upload_picture_here_in_jpg")
                -if @conflict.new_record?
                  %p &nbsp;
                  %p.description
                    %strong=t("f.conflict.please_save_form_after_uploading")
                -else
                  %a#n_document.btn.pull-right.notr{'data-toggle'=>'modal','data-target'=>'#m_document'}=t("f.conflict.add")
                #current_documents
                  %h4=t("f.conflict.images")
                  -@conflict.images.where(:locale=>I18n.locale).order(:pid).each do |d|
                    .document
                      %br
                      %hr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #666;'}/
                      -if @conflict.native_locale?
                        .row{:style=>'margin-top:8px;'}
                          .col-md-3
                            %img{:src=>d.file.to_s,:style=>'width:100%;height:auto'}
                            .center-text
                              [[IMAGE]]
                          .col-md-9
                            .row
                              .col-md-9
                                %a{:href=>d.file.to_s,:target=>'_blank'}= d.file.to_s.split('/')[-1]
                                %input.yestr{:type=>'text',:name=>'image_title_'+d.pid.to_s,:value=>d.title}
                              .col-md-3
                                %a.d_image.pull-right.btn.notr=t("f.conflict.remove")
                                -#%input{:type=>'radio',:name=>"image_prime",:value=>d.pid,:checked=>d.prime}
                            %textarea.yestr{:name=>'image_description_'+d.pid.to_s,:style=>'width:98%'}= d.description
                      -else
                        .row{:style=>'margin-top:8px;'}
                          .col-md-3
                            %img{:src=>d.file.to_s,:style=>'width:100%;height:auto'}
                            .center-text
                              [[IMAGE]]
                          .col-md-9
                            .row
                              .col-md-9
                                %a{:href=>d.file.to_s,:target=>'_blank'}= d.file.to_s.split('/')[-1]
                                %p
                                  %b="#{$iso639[@conflict.original_locale]}:"
                                  = d.title
                                %input.yestr{:type=>'text',:name=>'image_title_'+d.pid.to_s,:value=>(@conflict.images.where(:locale=>I18n.locale,:pid=>d.pid).any? ? @conflict.images.where(:locale=>I18n.locale,:pid=>d.pid)[0].title : "")}
                              .col-md-3
                                %a.d_image.pull-right.btn.notr=t("f.conflict.remove")
                                -#%input.yestr{:type=>'radio',:name=>"image_prime",:value=>d.pid,:checked=>d.prime}
                            %p
                              %b="#{$iso639[@conflict.original_locale]}:"
                              = d.description
                            %textarea.yestr{:name=>'image_description_'+d.pid.to_s,:style=>'width:98%'}= (@conflict.images.where(:locale=>I18n.locale,:pid=>d.pid).any? ? @conflict.images.where(:locale=>I18n.locale,:pid=>d.pid)[0].description : "")

                  %h4=t("f.conflict.documents")
                  -@conflict.documents.where(:locale=>I18n.locale).order(:pid).each do |d|
                    -next if d and d.copied?
                    .document
                      %hr{:style=>'margin:2px 0 6px;border-bottom: 2px solid #ccc;'}/
                      -if ['jpg','jpeg','png','gif','bmp'].include?(d.file.to_s.split('.')[-1]) 
                        .row{:style=>'margin-top:8px;background:#aaa;'}
                          .col-md-3
                            %img{:src=>d.file.to_s,:style=>'width:100%;height:auto'}
                          .col-md-9
                            .row
                              .col-md-9
                                %a{:href=>d.file.to_s,:target=>'_blank'}= d.file.to_s.split('/')[-1]
                                %input{:type=>'text',:name=>'document_title_'+d.pid.to_s,:value=>d.title}
                              .col-md-3
                                %a.d_document.pull-right.btn=t("f.conflict.remove")
                            %textarea{:name=>'document_description_'+d.pid.to_s,:style=>'width:98%'}= d.description
                      -else
                        .row{:style=>'margin-top:8px;'}
                          .col-md-10
                            %a{:href=>d.file.to_s,:target=>'_blank'}= d.file.to_s.split('/')[-1]
                            %input{:type=>'text',:name=>'document_title_'+d.pid.to_s,:value=>d.title}
                          .col-md-2
                            %a.d_document.pull-right.btn=t("f.conflict.remove")
                        %textarea{:name=>'document_description_'+d.pid.to_s,:style=>'width:98%'}= d.description

            :javascript
              var uploading = false;
              function uploadResponse (resp) {
                if (uploading){
                  return 
                }
                uploading = true;
                //$('iframe#upload_iframe').remove();
                //console.log(resp);
                if (resp === 'no') {
                  alert ('A problem occured uploading the file.');
                  return
                }
                dat = JSON.parse(resp)['document'];
                console.log(dat)
                filare = dat['file']['url'].split('/');
                filename = filare[filare.length-1];
                html = '<div class="document"> <hr style="margin:2px 0 6px;border-bottom: 2px solid #ccc;"> <div class="row" style="margin-top:8px;"> <div class="col-md-10"> <a href="'+dat['file']['url']+'" target="_blank">'+filename+'</a> <input name="document_title_'+dat['id']+'" type="text" value="'+dat['title']+'"> </div> <div class="col-md-2"> <a class="d_document pull-right btn">Remove</a> </div> </div> <textarea name="document_description_'+dat['id']+'" style="width:98%">'+dat['description']+'</textarea> </div>'
                $('#current_documents').append(html);
                $('#m_document').modal('hide');
              }
              $(document).ready(function(){
                $('#m_document').on('hidden.bs.modal', function () {
                  $('.i_document').val('');
                  $('#b_document').removeClass('disabled');
                  uploading = false;
                })
                $('#m_document').on('shown.bs.modal', function() {
                  $('#document_title').focus();
                  $('#b_document').removeClass('disabled');
                });
                $('.d_document').live('click', function(e){
                  par = $(this).closest('.document');
                  id = par.find('input').attr('name').split('_')[2];
                  html = '<input name="document_remove_'+id+'" type="hidden"></input>';
                  par.html(html);
                });
                $('.d_image').live('click', function(e){
                  par = $(this).closest('.document');
                  id = par.find('input').attr('name').split('_')[2];
                  html = '<input name="image_remove_'+id+'" type="hidden"></input>';
                  par.html(html);
                });
                $('#b_document').click(function(e){
                  if ($('#document_file').val()=='') {
                    $('#document_file').focus();
                    return
                  }
                  $('#b_document').addClass('disabled');
                  e.preventDefault();
                  if ('#{@example}') {
                    $('#m_document').modal('hide');
                  } else {
                    fileUpload(this.form,'/conflicts/getfile','upload');
                  }
                });
              });
            %hr/
          %input#activetab{:name=>'activetab',:type=>'hidden'}


    #meta.tab-pane
      #tag-modal.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
      .row
        .col-md-9
          %p.lead=t("f.conflict.meta_information")
        .col-md-3
          .pull-right.btn-group.png
            %button.btn.pn.prev= t("f.conflict.previous")
            %button#save{:class=>"btn btn-inverse pn "+(@example ? "disabled" : "")}= t("f.conflict.save")
            %br/

      .row
        .col-md-4
          -unless @conflict.new_record?
            .group
              %label= "#{t("f.conflict.conflict_id")}  <font style='font-weight:normal'>#{@conflict.id}</font>".html_safe
              %br/
              %label= "#{t("f.conflict.available_in")} <font style='font-weight:normal'>#{@conflict.conflict_texts.map{|x| $iso639[x.locale]}.join(", ")}</font>".html_safe

          .group
            %label{:for=>"conflict_headline"}= t("f.conflict.headline_text")
            .required=f.error_message_on :headline
            %p.description 
              =t("f.conflict.mainly_for_landing_page_appearance")
            ~f.text_area :headline, :class => :text_area, :rows=>4, :maxlength=>255

          .group
            .required=f.error_message_on :approval_status
            %label{:for=>"conflict_approval_status"}= t("f.conflict.approval_status")
            %label.checkbox.inline.apstat
              %input.local_disable.mustcheck.apstat{:type=>'radio',:value=>'deleted',:name=>'conflict[approval_status]'}=" &nbsp;#{t("f.conflict.deleted")}".html_safe
            %label.checkbox.inline.apstat
              %input.local_disable.mustcheck.apstat{:type=>'radio',:value=>'draft',:name=>'conflict[approval_status]'}=" &nbsp;#{t("f.conflict.draft")}".html_safe
            %label.checkbox.inline.apstat
              %input.local_disable.mustcheck.apstat{:type=>'radio',:value=>'queued',:name=>'conflict[approval_status]'}=" &nbsp;#{t("f.conflict.submit_for_moderation")}".html_safe
            %label.checkbox.inline.apstat
              %input.local_disable.mustcheck.apstat{:type=>'radio',:value=>'modified',:name=>'conflict[approval_status]'}=" &nbsp;#{t("f.conflict.modified")}".html_safe
            -if current_account and ["admin","editor"].include? current_account.role
              %label.checkbox.inline.apstat
                %input.local_disable.mustcheck.apstat{:type=>'radio',:value=>'approved',:name=>'conflict[approval_status]'}=" &nbsp;#{t("f.conflict.approved")}".html_safe
            -if apstat = @conflict.approval_status and current_account
              -apstat = 'modified' if apstat == 'approved' and !["admin","editor"].include?(current_account.role)
            -else
              -apstat = 'draft'
            :javascript
              $('input.apstat[value=#{apstat}]').prop('checked',true);
            -if current_account and ["admin","editor"].include? current_account.role and @conflict.approval_status === "deleted"
              %form{:action=>"/conflicts/destroy/#{@conflict.id}",:method=>'post'}
                %input{:value=>'delete',:name=>'_method',:type=>'hidden'}
                %button.btn.btn-danger{:style=>'margin-left:32px;',:type=>'submit'} DELETE

            -if current_account and ["admin","editor"].include? current_account.role
              .group
                %label{:for=>"conflict_modified_at"}= t("f.conflict.last_update_this_case")
                .required=f.error_message_on :modified_at
                %input#modified_at{:name=>"conflict[modified_at]",:type=>"text",:value=>@conflict.modified_at}
                %a.btn{:onclick=>"$('#modified_at').val((new Date).toISOString().replace(/T/,' ').split('.')[0]+' UTC')"}= t("f.conflict.update_as_today")

          %br/

          -if @saves and @saves.length > 0
            .group
              %label Save history:
              %div{:style=>"max-height:240px;overflow-y:auto"}
                %table{:style=>"width:calc( 100% - 36px );margin:0 18px;"}
                  %tdata
                    -@saves.reverse.each do |save|
                      %tr
                        %td=save[4]
                        %td
                          %small=Account.find(save[3].to_i).name
              %br/


          .group
            %br/
            .clearfix
              %label.pull-left{:style=>"margin:0"}= t("f.conflict.tags")
            .clearfix
              .pull-left
                %input#tag.autocomplete{:type=>"text",:style=>"width:240px;",:placeholder=>"search for tags",'data-source'=>'tag_names'}
              .pull-right
                %button#n_tag.btn.notr{'data-toggle'=>'modal','data-target'=>'#tag-modal',:href=>"/conflicts/modal/tag/0/#{@conflict.id}"}=t("f.conflict.create_tag")

            %hr/
            %ul{:style=>"list-style-type: none; padding: 0;"}
              -@conflict.tags.each do |t|
                %li{:id=>"tag_#{t.id}"}
                  %span= t.name
                  %a{:style=>'cursor:pointer',:onclick=>"remove_li('tag',#{t.id})"} Remove
                  &nbsp;
                  %input{:type=>"hidden",:name=>"tag_add_#{t.id}"}


        .col-md-8
          .group
            %label=t("f.conflict.notes_to_moderator")
            .row
              .col-md-4
                .clearfix
                  .pull-left
                    %textarea#message{:rows=>2,:style=>"width:240px;",:placeholder=>t("f.conflict.type_new_message")}
                .clearfix
                  .pull-left
                    %button.btn#message-btn{:style=>"width:240px;padding: 2px 12px;"}=t("f.conflict.send")
                %p#message-err.error

              .col-md-8
                :css
                  .messages li .msg {}
                  .messages li .msg .well {  max-width: 80%; min-height: 0; background-color: #fff; padding: 8px 16px; border-radius: 6px; margin-top:6px; }
                  .messages li .msg .well.pull-right {  background-color: #eee; }
                  .messages li .msg .well p {  font-size: 14px; margin-bottom: -4px; }
                  .messages li .msg small { font-size: 11px; color: #999; display: block; }
                  .messages li .msg small.black { color: #000; }
                %ul.messages{:style=>"list-style-type: none; padding: 0;"}
                  -if @conflict.conflict_messages.any?
                    -@conflict.conflict_messages.order("created_at desc").each do |msg|
                      %li.clearfix
                        -pull = msg.account == current_account ? "pull-right" : "pull-left"
                        .msg{:class => pull }
                          .clearfix
                            -if msg.account != current_account
                              %small.black.pull-left{:title => msg.account.email }
                                %b= msg.account.name
                                wrote
                            -else
                              %small.black.pull-left You wrote 
                            %small.pull-left &nbsp;
                            %small{:class => pull }= msg.created_at.strftime "on %B %d, %Y - %H:%M"
                          -if current_account and ["admin","editor"].include?(current_account.role)
                            %a.delete{:class=>pull,:id=>"del-#{msg.id}"} &nbsp;X&nbsp;
                          .well{:class => pull}
                            %p= msg.content
                %hr/

                :css
                  a.delete {
                    color: #c00;
                    font-weight: bold;
                    cursor: pointer;
                  }
                :javascript
                  $("a.delete").on("click",function(e){
                    id = $(this).attr("id").replace(/^del-/,"");
                    li = $(this).closest("li");
                    console.log(id)
                    $.post("/conflicts/msg_delete",
                      {id:id},
                      function(data){
                        if (data === "ok") {
                          li.remove();
                        }
                      }
                    ); 
                  });
                  $("#message-btn").on("click",function(e){
                    e.preventDefault();
                    $(this).prop("disabled",true);
                    if ($("#message").val().length > 0 ) {
                      $.post("/conflicts/msg_create",
                        {aid:#{current_account ? current_account.id : 0},cid:#{@conflict.new_record? ? 0 : @conflict.id}, content: $("#message").val()},
                        function(data){
                          if (data === "ok") {
                            html = '<li class="clearfix"> <div class="msg pull-right"> <div class="clearfix"> <small class="black pull-left">You wrote</small> <small class="pull-left">&nbsp;</small> <small class="pull-right">just now<small> </div> <div class="pull-right well"> <p>'+$("#message").val()+'</p> </div> </div> </li>';
                            $("ul.messages").prepend(html)
                            $("#message-err").text("");
                          } else {
                            $("#message-err").text(data);
                          }
                        }
                      ); 
                    } else {
                      $("#message-err").text("Can't send empty message!");
                    }
                  });


          -if current_account and ["admin","editor"].include? current_account.role and @conflict.account
            .group
              %label{:for=>"conflict_notes"}= t("f.conflict.internal_notes")
              .required=f.error_message_on :notes
              %p.description=t("f.conflict.please_indicate_changes_you_have")
              ~f.text_area :notes, :class => :text_area, :rows=>4
              -if current_account and ["admin","editor"].include? current_account.role and @conflict.account
                %p
                  By
                  %a{:href=>"/accounts/edit/#{@conflict.account.id}"}= @conflict.account.name

          .group
            %label{:for=>"conflict_contributor"}= t("f.conflict.contributor")
            .required=f.error_message_on :contributor
            %p.description=t("f.conflict.fill_in_your_name_organization")
            =f.text_field :contributor, :class => 'text_field basic_input'

          .group
            %label{:for=>"conflict_translator"}= t("f.conflict.translator")
            .required=f.error_message_on :translator
            %p.description=t("f.conflict.fill_in_your_name_organization")
            =f.text_field :translator, :class => 'text_field basic_input'

          .group
            %br/
            -if @conflict.conflict_accounts.any?
              %label= t("f.conflict.other_contributing_users")
              %ul{:style=>"list-style-type: none; padding: 0;"}
                -@conflict.conflict_accounts.each do |ca|
                  %li
                    .pull-left= ca.account.email
                    -if current_account and ["admin","editor"].include? current_account.role
                      .pull-left
                        &nbsp;
                        %a{:href=>"/conflicts/conflict_account_revoke/#{ca.id}"}= t("f.conflict.revoke")
                    %br/

            -if current_account and ["admin","editor"].include? current_account.role
              %br/
              %label= t("f.conflict.invite_users_to_collaborate")
              .clearfix
                .pull-left
                  %input#invite{:type=>"email",:style=>"width:240px;",:placeholder=>"Paste email address"}
                .pull-left
                  &nbsp;
                  &nbsp;
                .pull-left
                  %button.btn#invite-btn{:style=>"padding: 2px 12px;"}= t("f.conflict.invite")
              %p#invite-err.error
              :javascript
                $("#invite-btn").on("click",function(e){
                  e.preventDefault();
                  if (!$("#invite").hasClass("error")) {
                    $.post("/conflicts/ca_create",
                      {aid:$("#invite").val(),cid:#{@conflict.new_record? ? 0 : @conflict.id}},
                      function(data){
                        console.log(data)
                        if (data === "ok") {
                          window.location.reload();
                        } else {
                          $("#invite-err").text(data);
                        }
                      }
                    ); 
                  } 
                });




  -if @translate_only
    %input#translate_only{:type=>"hidden",:name=>"translate_only",:value=>"true"}
    :javascript

      tfields = [];
      texts = "name, slug, site, province, project_area, project_length, other_types, description, other_products, project_details, investment_string, affected_people, other_supporters, related_conflict_string, other_mobilizing_groups, other_mobilizing_forms, other_env_impacts, other_hlt_impacts, other_sec_impacts, other_outcomes, suggested_alternatives, success_reason, other_comments, table, ejos, govt_actors, features, headline, notes, message, translate_only".split(/\s*,\s*/);
      $.each (texts,function(i,e){
        c = $("#conflict_"+e);
        if(c.length == 0){
          c = $("#"+e);
        }
        if(c.length > 0){
          tfields.push(c[0])
        }
      });
      $.each($("#conflict_form input, #conflict_form textarea, #conflict_form select"),function(i,e){
        if (tfields.indexOf(e) == -1 && !$(e).hasClass("yestr")) {
          $(e).prop("disabled",true)
        }
      });
      $('.notr').hide();
      $('.notr').removeAttr("href");
      $('.notr').removeAttr("onclick");


:javascript
  var asuccess = "<div class='alert alert-success alert-dismissable fade in' id='alert-success' role='alert'> <button aria-label='Close' class='close' data-dismiss='alert' type='button'> <span aria-hidden=''>x</span> </button> Conflict saved successfully. &nbsp; &nbsp; </div>"
  var alerror = "<div class='alert alert-danger alert-dismissable fade in' id='alert-error' role='alert'> <button aria-label='Close' class='close' data-dismiss='alert' type='button'> <span aria-hidden=''>x</span> </button> Conflict could not be saved: &nbsp; &nbsp;<br/><br/><b></b></div>"
  function to_json() {
    formdata = $("form#conflict_form").serializeArray();
    var data = {};
    $(formdata ).each(function(index, obj){
      if (obj.name.match(/\[\w+\]/)) {
        parnt = obj.name.split("[")[0];
        child = obj.name.split("[")[1].replace(/\]$/,"");
        if (Object.keys(data).indexOf(parnt) == -1) {
          data[parnt] = {};
        }
        data[parnt][child] = obj.value;
      } else {
        data[obj.name] = obj.value;
      }
    });
    return data
  }
  function valPage(page){
    if ('#{@example}') {return true}
    pageName = $(page['selector']).children('a').attr('href').replace('#','');
    result = true;
    $.each($('.'+pageName+'_input'),function(i,v){
      var id = $('.'+pageName+'_input').eq(i).attr('id');
      if (id === "conflict_company_country" || id === "conflict_supporter_country") return true;
      console.log(id);
      if ($('.form').validate().element($('#'+id))) {
        //console.log('ok');
      } else {
        result = false;
      }
    });
    //console.log(result);
    return result;
    //return true;
  }
  $('.next').click(function (e) {
    e.preventDefault();
    page = $('#conflict-tabs > li.active');
    target = page.next().find('a').attr('href').replace("#","#_");
    if (valPage(page)) {
      page.next().children('a').tab('show');
      page.next().removeClass('closed');
      page.removeClass('shady');
      window.location = target;
      $('#activetab').val(target);
      window.scrollTo(0,0);
    } else {
      page.addClass('shady');
      page.next().children('a').tab('show');
      page.next().removeClass('closed');
    }
  });
  $('.prev').click(function (e) {
    e.preventDefault();
    page = $('#conflict-tabs > li.active');
    target = page.prev().find('a').attr('href').replace("#","#_");
    console.log(target)
    if (valPage(page)) {
      page.prev().children('a').tab('show');
      page.removeClass('shady');
      window.location = target;
      $('#activetab').val(target);
      window.scrollTo(0,0);
    } else {
      page.addClass('shady');
      page.next().children('a').tab('show');
    }
  });
  $('#conflict-tabs a').click(function (e) {
    e.preventDefault();
    if ($(this).parent().hasClass('closed')) {
    } else {
      target = $(this).attr('href').replace("#","#_");
      window.location = target;
      $('#activetab').val(target);
      window.scrollTo(0,0);
      $(this).tab('show');
    }
  })
  $(document).ready(function(){
    initMap([#{@lat||0},#{@lon||0}],false);
    wlh = $('#conflict-tabs > li > a[href='+window.location.hash.replace('#_','#')+']');
    if (wlh.length > 0) {
      wlh.tab('show',function(){
        window.scrollTo(0,0);
      });
    }
    $(".datemask").mask("99/99/9999");
    $('.datemask').attr('placeholder','__/__/____');
    $.validator.addMethod("minwords",
       function(value, element, params) {
          var trimmed = jQuery.trim(value).replace(/  +/g, ' ')
          var typedWords = trimmed.split(' ').length;
          if(typedWords > params) {
            return true;
          } else {
            return false;
          }
       },
       jQuery.format("Write an explanation with {0} words minimum.")
    );
    $.validator.addMethod("maxwords",
       function(value, element, params) {
          var trimmed = jQuery.trim(value).replace(/  +/g, ' ')
          var typedWords = trimmed.split(' ').length;
          if(typedWords <= params) {
            return true;
          } else {
            return false;
          }
       },
       $.format("You passed {0} words.")
    );
    $.validator.addMethod("valuenot", 
      function(value, element, params){
        return params != value;
      }, 
      "Please choose."
    );
    $.validator.addMethod("checkone", function(value, elem, param) {
        if($(".mustcheck:checkbox:checked").length > 0){
           return true;
       }else {
           return false;
       }
    },"Please choose at least one field");

    $.validator.addMethod("require_from_group", function(value, element, options) {
      var numberRequired = options[0];
      var selector = options[1];
      var fields = $(selector, element.form);
      var filled_fields = fields.filter(function() {
        // it's more clear to compare with empty string
        return $(this).val() != ""; 
      });
      var empty_fields = fields.not(filled_fields);
      // we will mark only first empty field as invalid
      if (filled_fields.length < numberRequired && empty_fields[0] == element) {
        return false;
      }
      return true;
      // {0} below is the 0th item in the options field
    }, jQuery.format("Please fill out at least {0} of these fields."));

    $rules = {
        'conflict[name]': {
          required: true,
          maxlength: 255
        },
        'conflict[description]': {
          required: true,
          minwords: 2
        },
        'conflict[category_id]': {
          required: true,
          valuenot: ''
        },
        'conflict[type_id]': {
          required: true,
          valuenot: ''
        },
        'product': {
          required: true,
          checkone: true
        },
      }
    function addCheckerRule (cls,rls) {
      $(cls).each (function(i,v){
        rls[$(v).attr('name')] = {'require_from_group': [1,cls]};
      });
    }
    $.each(['.mobilizing_group_cb','.mobilizing_form_cb','.project_status_cb','.conflict_event_cb','.product_cb'],
      function(i,v){
        addCheckerRule(v,$rules);
      }
    );
    $(".form").validate({
      rules: $rules,
      /*errorPlacement: function(error, element) {
        error.appendTo( element.prev().prev().children('span'));
      },*/
    });
  });
  /*
  $(document).ready(function (){
    $( ".datepicker" ).datepicker($.datepicker.regional['tr']);
    $( ".datepicker" ).datepicker( "option", "changeYear", true );
    $( ".datepicker" ).datepicker( "option", "changeMonth", true );
    $( ".datepicker" ).datepicker( "option", "maxDate", "+1y" );
  });
  */

-if @conflict.new_record? 
  :javascript
    $('#conflict-tabs > li').not('.active').addClass('closed');
-else
  :javascript
    $(document).ready(function(){
      $(document).on("submit","form#conflict_form",function(e){
        e.preventDefault();
        $.ajax({
          url : $("form#conflict_form").attr("action"),
          type : "PUT", //$("form#contact_form").attr("method"),
          dataType: "json",
          data : to_json(),
          success: function(data){
            if (data.status == "success") {
              $("#fixed").css("opacity",0);
              $("#fixed").html(asuccess);
              $("#fixed").css("opacity",1);
            } else if (data.status == "error") {
              $("#fixed").css("opacity",0);
              $("#fixed").html(alerror);
              $("#fixed #alert-error b").html(data.errors.join("<br/><br/>"));
              $("#fixed").css("opacity",1);
            }
          }
        })
      })
    })
        
