.row.whitebox
  .col-md-4
    .group
      =f.label :name
      =f.error_message_on :name
      =f.text_field :name, :class => :text_field

    .group
      =f.label :slug
      =f.error_message_on :slug
      =f.text_field :slug, :class => :text_field

    .group
      =f.label :slogan
      =f.error_message_on :slogan
      ~f.text_field :slogan, :class => :text_field

    .group
      =f.label :image
      =f.error_message_on :image
      =f.text_field :image, :class => :text_field

  .col-md-4
    .group
      =f.label :description
      =f.error_message_on :description
      ~f.text_area :description, :class => :text_area, :rows=>5

    .group
      =f.label :filter
      =f.error_message_on :filter
      ~f.text_field :filter, :class => :text_field
      %br/
      %br/
      #filter-info
      %br/
      %a.btn{:onclick=>"$('#filter-modal').modal('show');"} Edit filter options

  .col-md-4
    .group
      %label Additional Attributes
      %textarea.feature{:name=>'data', :class => :text_area, :rows => 2}=@features.join(', ')

    .group#cfields
      %label Contained Fields
      .row
        .col-md-9
          %select#cont
            %option{:disabled=>true} Click to add a field
            -$attrhash.each do |k,v|
              %option{:value=>v}=k
        .col-md-3
          #addc.btn Add
      %ul#conti{:style=>'padding:12px 0;list-style-type:none'}
        -@contained.each do |k,v|
          %li{:id=>"cont-#{v}"}
            %span=k
            %a.remove.small.pull-right{:style=>'cursor:pointer'} Remove



    -content_for :include do
      :javascript
        var filterinfo = eval("["+#{@filterinfo}.join(',')+"]");
        var markerCount = filterinfo.length
    -content_for :outer do
      -unless @featured.new_record?
        #csv-modal.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
          .modal-dialog
            .modal-content
              .modal-header
                .row
                  .col-md-6.col-md-offset-3
                    %h3= "Upload CSV file for #{@featured.name}"
                  .col-md-3
                    %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
              .modal-body
                .row
                  .col-md-6.col-md-offset-3
                    .hero-unit
                      %p Notice: if you've added tags to cases in the CSV file, please don't forget to update the conflicts cache.
                    .inner
                      =form_for :featured, url(:featureds, :csv, :id => @featured.id), :class => :form, :enctype => 'multipart/form-data' do |f|
                        %input#file{:type=>'file',:name=>'featured[file]'}
                        %br/
                        .group.navform.wat-cf
                          =f.submit pat(:upload), :class => 'btn btn-warning', :style=>'width:180px;font-weight:bold'
      #filter-modal.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
        .modal-dialog
          .modal-content
            .modal-header
              %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
              %h3= "Filter cases for #{@featured.name}"
            .modal-body
              .row
                .col-md-12
                  #filter-row
                    #filter= render "base/filter", :layout => false

    %br/
    .group
      =f.text_field :features, :type => :hidden, :value=>@featured.features, :id => 'features'

    .group.navform.wat-cf
      =f.submit pat(:save), :class => 'btn pull-right'

-unless @featured.new_record?
  .row.whitebox
    .col-md-8.col-md-offset-2
      .group
        #filter-head
        #filter-list
          .clearfix
            %a.btn.pull-left{:href=>"/featureds/export/#{@featured.id}"} Export CSV
            %a.btn.pull-left{:onclick=>"$('#csv-modal').modal('show');"} Import CSV
          %br/
          -@followed ||= []
          -@followed.each do |conflict|
            .row
              .clearfix
                .pull-left
                  =conflict.name
                  %small
                    %em=conflict.approval_status
                    -conflict.tags.each do |tag|
                      &nbsp;
                      %span.small.badge{:style=>"background-color:##{tag.domain}"}=tag.name
                .pull-right
                  .small
                    %a{:id=>"oc_#{conflict.id}",:onclick=>"editFeature(#{conflict.id})",:style=>'cursor:pointer;'} Edit features
              .small{:id=>"feat_#{conflict.id}",:style=>'display:none'}
                .clearfix
                  .pull-right
                    %a{:target=>'_blank',:href=>"/conflicts/edit/#{conflict.id}"} Edit Original
                    |
                    %a{:target=>'_blank',:href=>"/conflict/#{conflict.slug}"} View Conflict
                -@features.each do |feat|
                  -next if ($attrhash.values).include? feat
                  -cfeats = JSON.parse(conflict.features || "{}")
                  .row
                    .col-xs-2
                      %strong= UnicodeUtils.titlecase feat.gsub(/[-_]/,' ')
                    .col-xs-10
                      %input.conflict{:type=>'text',:name=>"conflict[#{feat}:#{conflict.id}]",:value=>cfeats["#{@featured.id}:#{feat}"]}
                %br/

:javascript
  $('input.conflict').on('change',function(e){
    $(this).addClass('changed');
  });

  var sel = $('select#cont').find('option:selected');
  $('#cfields').on('change','select#cont',function(e){
    sel = $(this).find('option:selected');
  });
  $('#addc').on('click',function(e){
    if($('li#cont-'+sel.val()).length == 0) {
      html = "<li id='cont-"+sel.val()+"'> <span>"+sel.text()+"</span> <a class='remove small pull-right' style='cursor:pointer'>Remove</a> </li>";
      $('ul#conti').append(html);
    }
  });

  $('ul#conti').on('click','li .remove',function(){
    $(this).closest('li').remove();
  });

  function editFeature(id) {
    feat = $('#feat_'+id)
    if (feat.is(':visible')) {
      feat.slideUp('slow');
      $('#oc_'+id).text('Edit features');
    } else {
      feat.slideDown('fast');
      $('#oc_'+id).text('Finished editing');
    }
  }

  $('form.form').on('submit',function(e){
    data = $('textarea[name=data]').val().replace(/\n/,' ').split(/,\ ?/);
    $.each($.makeArray($('ul#conti li').map(function(){return $(this).attr('id').split('-')[1]})),function(i,v){
      data.push(v)
    });
    $('#features').val(JSON.stringify(data));
    $('input.conflict').not('.changed').remove();
  });

-unless @featured.new_record?
  :javascript
    $(document).ready(function(){
      initFeatured(#{@featured.filter.split('/')});
    });
