-content_for :include do
  =javascript_include_tag 'upload_iframe'
  :css
    #map {height: 240px;}
    ul.sortable {
      list-style-type: none;
      padding: 0;
    }
    ul.sortable li {
      margin: 6px 0;
      padding: 0 6px;
      cursor: move;
      user-select: none;
    }
-content_for :body_end do
  =javascript_include_tag 'map-edit'
  :javascript
    initMap(#{[@featured.view[0].to_f,@featured.view[1].to_f]},false)
    $("#viewport-modal").on("shown.bs.modal",function(){map.invalidateSize();map.setZoom(#{@featured.view[2]})})
    

-content_for :outer do
  -unless @featured.new_record?
    #csv-modal.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
      .modal-dialog
        .modal-content
          .modal-header
            .row
              .col-md-6.col-md-offset-3
                %h3= "Upload CSV file for #{@featured.name}"
              .col-md-3
                %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
          .modal-body
            .row
              .col-md-6.col-md-offset-3
                .hero-unit
                  %p Notice: if you've added tags to cases in the CSV file, please don't forget to update the conflicts cache.
                .inner
                  =form_for :featured, url(:featureds, :csv, :id => @featured.id), :class => :csv, :enctype => 'multipart/form-data' do |f|
                    %input#file{:type=>'file',:name=>'featured[file]'}
                    %br/
                    .group.navform.wat-cf
                      =f.submit pat(:upload), :class => 'btn btn-warning', :style=>'width:180px;font-weight:bold'

  #viewport-modal.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
          %h3= "Set viewport for #{@featured.name}"
        .modal-body
          #map
        .modal-footer
          %input.pull-right.btn.btn-info#v_set{:type=>'button',:value=>'Set',:onclick=>'setViewport();'} 


  #filter-modal.modal.fade{:tabindex=>-1,:role=>'dialog','aria-hidden'=>true}
    .modal-dialog
      .modal-content
        .modal-header
          %button.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
          %h3= "Filter cases for #{@featured.name}"
        .modal-body
          .row
            .col-md-12
              #filter-row
                #filter= render "base/filter", :layout => false

  #m_image.modal.fade
    .modal-dialog
      .modal-content
        %form
          .modal-header
            %button.btn.btn-default.close{:type=>'button','data-dismiss'=>'modal','aria-hidden'=>true} &times;
            %h3 Upload Image
          .modal-body
            %label Title:
            %input.i_image#image_title{:type=>'text',:name=>'image[title]'}
            %br/
            %label File:
            %br/
            %input.i_image#image_file{:type=>'file',:name=>'image[file]'}
            %input#image_file_cache{:type=>'hidden',:name=>'image[file_cache]'}
            %input#image_featured_id{:type=>'hidden',:name=>'image[attachable_id]',:value=>"#{@featured.id}"}
            %input#image_featured_id{:type=>'hidden',:name=>'image[attachable_type]',:value=>"Featured"}
            %p
              #upload
          .modal-footer
            .row
              .col-md-6
                %input.btn.btn-info#b_image{:type=>'button',:value=>'Send'} 



.row.whitebox
  .col-md-4
    .group
      =f.label :name
      =f.error_message_on :name
      =f.text_field :name, :class => :text_field, :maxlength=>255, :validate=>true

    .group
      =f.label :slug
      =f.error_message_on :slug
      =f.text_field :slug, :class => :text_field, :maxlength=>255, :validate=>true

    .group
      =f.label :slogan
      =f.error_message_on :slogan
      ~f.text_field :slogan, :class => :text_field, :maxlength=>255, :validate=>true

    .group
      =f.label :headline
      =f.error_message_on :headline
      ~f.text_area :headline, :class => :text_area, :rows=>2, :maxlength=>255, :validate=>true

    .group
      =f.label :description
      =f.error_message_on :description
      ~f.text_area :description, :class => :text_area, :rows=>6

    %br/
    -unless @featured.new_record?
      .group
        %input#n_image.btn.full{'data-toggle'=>'modal','data-target'=>'#m_image',:value=>'Upload Image',:style=>'margin-top:20px;width:100%;'}
        %br/
        %br/
        .images
          -@featured.images.order(:created_at).each_with_index do |img,ind|
            .image
              .row
                .col-md-4
                  %a{:href=>img.file.url,:target=>'_blank'}
                    %img{:src=>img.file.thumb,:style=>'width:100%'}
                  %br/
                .col-md-8
                  %input{:type=>'text',:name=>"images_attributes[#{ind}][title]",:id=>"images_attributes_#{ind}_title",:value=>(img.title || "")}
                  %br/
                  %input.prime{:type=>'checkbox',:name=>"images_attributes[#{ind}][prime]",:id=>"images_attributes_#{ind}_prime",:checked=>img.prime == 1}
                  %label{:for=>"images_attributes_#{ind}_prime"} Primary image?
                  %br/
                  %input{:type=>'hidden',:name=>"images_attributes[#{ind}][_destroy]"}
                  %input{:type=>'checkbox',:name=>"images_attributes[#{ind}][_destroy]",:id=>"images_attributes_#{ind}__destroy"}
                  %label{:for=>"images_attributes_#{ind}__destroy"} Delete?
              %br/

  .col-md-4
    .group
      =f.label :filter
      %a.btn{:onclick=>"$('#filter-modal').modal('show');"} Edit filter options
      =f.error_message_on :filter
      ~f.text_field :filter, :class => :text_field
      #filter-info

    .group#tfields
      %label Tags
      .row
        .col-md-9
          %select#tag
            %option{:disabled=>true} Click to tag featured map
            -Tag.all.each do |t|
              %option{:value=>t.id}=t.name
        .col-md-3
          #addt.btn Add
      %ul#tagi{:style=>'padding:12px 0;list-style-type:none'}
        -@featured.tags.each do |t|
          %li{:id=>"tag-#{t.id}"}
            %span=t.name
            %a.remove.small.pull-right{:style=>'cursor:pointer'} Remove

    .group#vector_order
      %label{:style=>"margin-top:0px;width: 100%;"} 
        Order vector layers
        %small.pull-right{:style=>"font-weight:normal;"} clickable?
      %ul#sortable.sortable
        -@featured.vector_data.order(:rank).each do |vector|
          -id = vector.id
          %li.ui-state-default.clearfix
            %span.pull-left= vector.name
            %input.pull-left{:type=>"hidden",:name=>"vectors[#{id}][name]",:value=>vector.name}
            &nbsp;
            %a{:style=>"color:#0380a5;", :target=>"_blank", :href=>"/vectors/edit/#{vector.id}"} edit
            %input.pull-right{:type=>"checkbox",:name=>"vectors[#{id}][clickable]",:checked=>(vector.clickable ? true : false)}
      :javascript
        $("ul#sortable").sortable();

  .col-md-4
    .group
      %label Additional Attributes
      %textarea.feature.text_area{:name=>'data', :class => :text_area, :rows => 2}=(@features||[]).join(', ')

    .group
      =f.label :viewport
      %a.btn{:onclick=>"$('#viewport-modal').modal('show');"} Set viewport
      =f.error_message_on :viewport
      =f.text_field :viewport, :class => :text_field

    .group#bfields
      %label Base map layers
      .row
        .col-md-9
          %select#base
            %option{:disabled=>true} Click to add a field
            -#["OpenStreetMap.Mapnik", "Thunderforest.Landscape", "Esri.WorldTopoMap", "Esri.WorldImagery", "Stamen.TonerBackground", "Stamen.TonerLite", "Stamen.Watercolor", "Esri.WorldPhysical", "Esri.NatGeoWorldMap"].each_with_index do |l,i|
            -lastprovider = ""
            -["OpenStreetMap.Mapnik", "OpenStreetMap.BlackAndWhite", "OpenStreetMap.DE", "OpenStreetMap.CH", "OpenStreetMap.France", "OpenStreetMap.HOT", "OpenStreetMap.BZH", "OpenTopoMap", "Thunderforest.OpenCycleMap", "Thunderforest.Transport", "Thunderforest.TransportDark", "Thunderforest.SpinalMap", "Thunderforest.Landscape", "Thunderforest.Outdoors", "Thunderforest.Pioneer", "OpenMapSurfer.Roads", "Hydda.Full", "Hydda.Base", "Stamen.Toner", "Stamen.TonerBackground", "Stamen.TonerLite", "Stamen.Watercolor", "Stamen.Terrain", "Stamen.TerrainBackground", "Stamen.TopOSMRelief", "Esri.WorldStreetMap", "Esri.DeLorme", "Esri.WorldTopoMap", "Esri.WorldImagery", "Esri.WorldTerrain", "Esri.WorldShadedRelief", "Esri.WorldPhysical", "Esri.OceanBasemap", "Esri.NatGeoWorldMap", "Esri.WorldGrayCanvas", "FreeMapSK", "MtbMap", "CartoDB.Positron", "CartoDB.PositronNoLabels", "CartoDB.PositronOnlyLabels", "CartoDB.DarkMatter", "CartoDB.DarkMatterNoLabels", "CartoDB.DarkMatterOnlyLabels", "CartoDB.Voyager", "CartoDB.VoyagerNoLabels", "CartoDB.VoyagerOnlyLabels", "CartoDB.VoyagerLabelsUnder", "HikeBike.HikeBike", "HikeBike.HillShading", "BasemapAT.basemap", "BasemapAT.grau", "BasemapAT.overlay", "BasemapAT.highdpi", "BasemapAT.orthofoto", "nlmaps.standaard", "nlmaps.pastel", "nlmaps.grijs", "nlmaps.luchtfoto", "NASAGIBS.ModisTerraTrueColorCR", "NASAGIBS.ModisTerraBands367CR", "NASAGIBS.ViirsEarthAtNight2012", "NLS", "Wikimedia", "GeoportailFrance.parcels", "GeoportailFrance.ignMaps", "GeoportailFrance.maps", "GeoportailFrance.orthos", "OneMapSG.Default", "OneMapSG.Night", "OneMapSG.Original", "OneMapSG.Grey", "OneMapSG.LandLot", "OpenSeaMap", "OpenPtMap", "OpenRailwayMap", "OpenFireMap", "SafeCast", "OpenMapSurfer.AdminBounds", "Hydda.RoadsAndLabels", "Stamen.TonerHybrid", "Stamen.TonerLines", "Stamen.TonerLabels", "Stamen.TopOSMFeatures", "OpenWeatherMap.Clouds", "OpenWeatherMap.Pressure", "OpenWeatherMap.Wind", "NASAGIBS.ModisTerraLSTDay", "NASAGIBS.ModisTerraSnowCover", "NASAGIBS.ModisTerraAOD", "NASAGIBS.ModisTerraChlorophyll", "JusticeMap.income", "JusticeMap.americanIndian", "JusticeMap.asian", "JusticeMap.black", "JusticeMap.hispanic", "JusticeMap.multi", "JusticeMap.nonWhite", "JusticeMap.white", "JusticeMap.plurality"].each_with_index do |l,i|
              -s = l.split(".")
              -if s[0] == lastprovider
                %option{:value=>i,"data-value"=>l}=s[1]
              -elsif s[1]
                - lastprovider = s[0]
                %option{:value=>0,:disabled=>true} &nbsp;
                %option{:value=>0,:disabled=>true}= s[0]
                %option{:value=>i,"data-value"=>l}=s[1]
              -else
                - lastprovider = s[0]
                %option{:value=>0,:disabled=>true} &nbsp;
                %option{:value=>0,:disabled=>true}= s[0]
                %option{:value=>i,"data-value"=>l}=s[0]
        .col-md-3
          #addb.btn Add
      %ul#basei{:style=>'padding:12px 0;list-style-type:none'}
        -(@featured.baselayers||'').split(',').each_with_index do |l,i|
          %li{:id=>"base-#{i}"}
            %span=l
            %input.base{:type=>:hidden,:value=>l}
            %a.remove.small.pull-right{:style=>'cursor:pointer'} Remove

    .group
      %label.control-label{:for=>"featured_color"} Color
      .controls
        .row
          .col-xs-8
            %input#featured_color.form-control.input-large.input-with-feedback{:type=>'text',:name=>"featured[color]",:value=>"##{@featured.color||"000000"}"}
            %input#color{:type=>'hidden',:value=>"##{@featured.color||"000000"}"}
          .col-xs-4
            #fill_color{:style=>"cursor:pointer;border-radius:4px;height:34px;width:100%;background-color:##{@featured.color||"000000"};border:1px solid #ccc"} &nbsp;
        .row
          .col-xs-12
            #fill_wheel.pull-right{:style=>'margin:12px 0;height:360px;width:360px;display:none;'} &nbsp;
            :javascript
              var fcw;
              fcw = Raphael.colorwheel($('#fill_wheel'), 360);
              fcw.input($("#color")[0]);
              $(document).ready(function(){
                if ("##{@featured.color}"[0] == "#"){
                  fcw.color("##{@featured.color}");
                  $("#fill_color").css('background',fcw.color().hex);
                }
              });
              $('#color').change(function(e){
                $('#featured_color').val($(this).val());
                $("#fill_color").css('background',fcw.color().hex);
              });
              fcw.onchange(function(e){
                $("#color").val(fcw.color().hex);
                $("#featured_color").val(fcw.color().hex);
              });
              $('#featured_color').blur(function(e){
                val = $(this).val().replace(/^#/,'');
                if (val.length == 3){
                  val = val.substr(0,1)+val.substr(0,1)+val.substr(1,1)+val.substr(1,1)+val.substr(2,1)+val.substr(2,1);
                }
                console.log(val)
                $('#featured_color').val("#"+val);
                $('#color').val("#"+val);
                fcw.color('#'+val);
                $("#fill_color").css('background',fcw.color().hex);
              });
              $('#fill_color').on('click',function(e){
                $('#fill_wheel').slideDown();
              });

    .group#cfields
      %label Contained Fields
      .row
        .col-md-9
          %select#cont
            %option{:disabled=>true} Click to add a field
            -$attrhash.each do |k,v|
              %option{:value=>v}=k
        .col-md-3
          #addc.btn Add

      -if @contained
        %ul#conti{:style=>'padding:12px 0;list-style-type:none'}
          -@contained.each do |k,v|
            %li{:id=>"cont-#{v}"}
              %span=k
              %a.remove.small.pull-right{:style=>'cursor:pointer'} Remove




    %br/
    .group
      =f.text_field :baselayers, :type => :hidden, :value=>@featured.baselayers, :id => 'baselayers'
      =f.text_field :features, :type => :hidden, :value=>@featured.features, :id => 'features'
      %input#account{:name=>'featured[account_id]', :type => :hidden, :value=>current_account.id}
      %input#tags{:name=>'tags', :type => :hidden, :value=>@featured.tags.map(&:id).join(',')}

    .group.navform.wat-cf.clearfix
      .pull-right
        =f.submit pat(:save), :class => 'btn btn-primary pull-right'
      .pull-right{:style=>"margin:-6px 18px 0 0"}
        %label.control-label{:for=>'featured_published'} Published?
        %input#featured_published{:type=>"checkbox",:name=>'featured[published]',:checked=> @featured.published }

-if @followed and not @featured.new_record? 
  .row.whitebox
    .col-md-8.col-md-offset-2
      .group
        #filter-head
        #filter-list
          .clearfix
            %strong.pull-left{:style=>'margin:8px 0 0 -15px'}= "Showing #{@followed.count} filtered cases."
            %a.btn.pull-left{:href=>"/featureds/export/#{@featured.id}"} Export CSV
            %a.btn.pull-left{:onclick=>"$('#csv-modal').modal('show');"} Import CSV
          %br/
          -@followed.each do |conflict|
            .row
              .clearfix
                .pull-left
                  =conflict.name
                  %small
                    %em=conflict.approval_status
                    -(conflict.tags & @featured.tags).each do |tag|
                      &nbsp;
                      %span.small.badge{:style=>"background-color:##{tag.domain}"}=tag.name
                .pull-right
                  .small
                    %a{:id=>"oc_#{conflict.id}",:onclick=>"editFeature(#{conflict.id})",:style=>'cursor:pointer;'} Edit features
              .small{:id=>"feat_#{conflict.id}",:style=>'display:none'}
                .clearfix
                  .pull-right
                    %a{:target=>'_blank',:href=>"/conflicts/edit/#{conflict.id}"} Edit Original
                    |
                    %a{:target=>'_blank',:href=>"/conflict/#{conflict.slug}"} View Conflict
                -@features.each do |feat|
                  -next if ($attrhash.values).include? feat
                  -next unless feat
                  -cfeats = JSON.parse(conflict.features || "{}")
                  .row
                    .col-xs-2
                      %strong= UnicodeUtils.titlecase feat.gsub(/[-_]/,' ')
                    .col-xs-10
                      %input.conflict{:type=>'text',:name=>"conflict[#{feat}:#{conflict.id}]",:value=>cfeats["#{@featured.id}:#{feat}"]}
                %br/

:javascript
  $('input.conflict').on('change',function(e){
    $(this).addClass('changed');
  });

  var sel = $('select#cont').find('option:selected');
  $('#cfields').on('change','select#cont',function(e){
    sel = $(this).find('option:selected');
  });
  $('#addc').on('click',function(e){
    if($('li#cont-'+sel.val()).length == 0) {
      html = "<li id='cont-"+sel.val()+"'> <span>"+sel.text()+"</span> <a class='remove small pull-right' style='cursor:pointer'>Remove</a> </li>";
      $('ul#conti').append(html);
    }
  });

  var tag = $('select#tag').find('option:selected');
  $('#tfields').on('change','select#tag',function(e){
    tag = $(this).find('option:selected');
  });
  $('#addt').on('click',function(e){
    if($('li#tag-'+tag.val()).length == 0) {
      html = "<li id='tag-"+tag.val()+"'> <span>"+tag.text()+"</span> <a class='remove small pull-right' style='cursor:pointer'>Remove</a> </li>";
      $('ul#tagi').append(html);
    }
  });

  var lay = $('select#base').find('option:selected');
  $('#bfields').on('change','select#base',function(e){
    lay = $(this).find('option:selected');
  });
  $('#addb').on('click',function(e){
    if($('li#lay-'+lay.data("value")).length == 0) {
      html = "<li id='lay-"+lay.val()+"'> <span>"+lay.text()+"</span> <input class='base' type='hidden' value='"+lay.data("value")+"'> <a class='remove small pull-right' style='cursor:pointer'>Remove</a> </li>";
      $('ul#basei').append(html);
    }
  });

  $('ul').on('click','li .remove',function(){
    $(this).closest('li').remove();
  });

  $('.images').on('change','.prime',function(e){
    $('.prime').prop('checked',false);
    $(this).prop('checked',true);
  });

  function editFeature(id) {
    feat = $('#feat_'+id)
    if (feat.is(':visible')) {
      feat.slideUp('slow');
      $('#oc_'+id).text('Edit features');
    } else {
      feat.slideDown('fast');
      $('#oc_'+id).text('Finished editing');
    }
  }

  $('form.form').on('submit',function(e){
    e.preventDefault();
    nicEditors.findEditor('featured_description').saveContent();
    data = $('textarea[name=data]').val().replace(/\n/,' ').split(/,\ ?/);
    $.each($.makeArray($('ul#conti li').map(function(){return $(this).attr('id').split('-')[1]})),function(i,v){
      data.push(v)
    });
    nin = data.indexOf('');
    if (nin >= 0) {
      data.splice[nin]
    }
    tags = $.makeArray($('ul#tagi li').map(function(){return $(this).attr('id').split('-')[1]})).join(',')
    console.log(tags)
    bases = [];
    $.each( $('input.base'), function(i,b){
      bases.push($(b).val());
    });
    $('#baselayers').val(bases.join(','));
    $('#features').val(JSON.stringify(data));
    $('#tags').remove();
    $('input.conflict').not('.changed').remove();
    data = $("form.form").serializeArray();
    data.push({name:"tags",value:tags})
    console.log(data)
    $.post("/featureds/update/"+window.location.pathname.split("/")[3], data, function(data) {
      data = JSON.parse(data);
      if (data["status"] == "success") { window.location.reload(); }
    })
    //$('form.form').submit();
  });

-unless @featured.new_record?
  :javascript
    $(document).ready(function(){
      //initFeatured(#{@featured.filter.split('/')});
    });

:javascript
  var uploading = false;
  function uploadResponse (resp) {
    if (uploading){
      return 
    }
    uploading = true;
    $('iframe#upload_iframe').remove();
    if (resp === 'no') {
      alert ('An error occured while sending the file.');
      return
    }
    dat = JSON.parse(resp);
    html = "<div class='images'> <div class='row'> <div class='col-md-4'> <a href='"+dat.file+"' target='_blank'> <img src='"+dat.thumb+"' style='width:100%'> </a> <br> </div> <div class='col-md-8'> <input id='images_attributes_"+dat.n+"_title' name='images_attributes["+dat.n+"][title]' value='"+dat.title+"' type='text'> <br> <input class='prime' id='images_attributes_"+dat.n+"_prime' name='images_attributes["+dat.n+"][prime]' type='checkbox'> <label for='images_attributes_"+dat.n+"_prime'>Primary image?</label> <br> <input name='images_attributes["+dat.n+"][_destroy]' type='hidden'> <input id='images_attributes_"+dat.n+"__destroy' name='images_attributes["+dat.n+"][_destroy]' type='checkbox'> <label for='images_attributes_"+dat.n+"__destroy'>Delete?</label> </div> </div> <br> </div>";
    $('.images').append(html);
    $('#m_image').modal('hide');
  }
  $(document).ready(function(){
    $('#m_image').on('hidden.bs.modal', function () {
      $('.i_image').val('');
      $('#b_image').removeClass('disabled');
      uploading = false;
    })
    $('#m_image').on('shown.bs.modal', function() {
      $('#image_url').focus();
    });
    $('#b_image').click(function(e){
      if ($('#image_file').val()=='') {
        $('#image_file').focus();
        return
      }
      $('#b_image').addClass('disabled');
      e.preventDefault();
      fileUpload(this.form,'/featureds/getimage','upload');
    });
    $('#cn_image').click(function(e){
      $('#m_image').modal('hide');
    });
    //$(".datemask").mask("99/99/9999");
    //$('.datemask').attr('placeholder','____/__/__');
    //nicEditors.allTextAreas();
    new nicEditor({}).panelInstance('featured_description',{hasPanel : true});
  });

  function filterFollowed(data) {
    console.log(data)
  }

  function setViewport() {
    center = [map.getCenter().lat.toFixed(6),map.getCenter().lng.toFixed(6),map.getZoom()].join("|")
    $('#featured_viewport').val(center);
    $('#viewport-modal').modal('hide');
  }
