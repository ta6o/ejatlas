-# coding: utf-8
#conflict_filter.noselect
  .col-sm-9.canvas
    .row
      .col-sm-8{:style=>"padding:0"}
        .head
          .ready
            %strong Drag the items from the left side below.
        .body
          .root.dropbox.or{"data-section"=>"box","data-value"=>'or'}

      .col-sm-4
        .relative.options
          -@filterform.each do |page,content|
            -content.each do |field,options|
              .data{:id=>field,:style=>(field=="success_level" ? "display:block" : "")}
                -if options.has_key? 'name' then  name = options['name'] else  name = field end
                -if options['content'].is_a? Array
                  %h4.head= field.gsub("_"," ").titlecase
                  %ul.body
                    -options['content'].each do |c|
                      %li
                        %span.drag.graybg{"data-section"=>"field","data-name"=>name,"data-field"=>field,"data-value"=>c.keys.first}=c.values.first

  .col-sm-3{:style=>"padding:0"}
    #accordion.panel-group{:role=>'tablist','aria-multiselectable'=>'true'}
      .panel.panel-default
        -@filterform.each do |page,content|
          .panel-heading{:role=>"tab",:id=>"h_#{page}"}
            %h5.panel-title
              %a.collapsed{"data-toggle"=>"collapse","data-parent"=>"#accordion","href"=>"#c_#{page}","aria-expanded"=>(page=="basic_data" ? "true" : "false"),"aria-controls"=>"c_#{page}"}
                =page.gsub("_"," ").titlecase
          .panel-collapse.collapse{:id=>"c_#{page}",:class=>(page=="basic_data" ? "in" : ""),:role=>"tabpanel","aria-labelledby"=>"h_#{page}"}
            .panel-body
              %ul
                -content.each do |field,options|
                  %li
                    %a.show-filter-content{"data-id"=>"#{field}",:title=>options.to_s}= field.gsub("_"," ").titlecase
    #filterInfo{:style=>'margin-top:8px;'}
      %p.large
        Please pick the
        %strong filter options 
        from the panel on the left.
      %ul
        %li{:style=>'color:white;font-weight:bold;text-align:center;'}
          %div.idrag
            .dropbox.or{"data-section"=>"box","data-value"=>'or'} OR
          %div.idrag
            .dropbox.and{"data-section"=>"box","data-value"=>'and'} AND
          %div.idrag
            .dropbox.not{"data-section"=>"box","data-value"=>'not'} NOT


:javascript
  window.onload = onFilterLoad;
  function onFilterLoad() {
    if (typeof createContainer === 'function' ) {
      $('.show-filter-content').on('click',function (e) {
        $('.show-filter-content').css('font-weight','normal');
        $(this).css('font-weight','bold');
        id = $(this).attr('data-id');
        $('#conflict_filter .options .data').hide();
        $("#"+id).show();
      })

      $('.drag, .idrag').draggable({
        connectToSortable: ".dropbox",
        placeholder: 'place-ag',
        revert: 'invalid',
        helper: 'clone',
        containment: ".canvas",
        hoverClass: 'drag-hover',
        cursorAt: { left: 0 }
      }).disableSelection();

      $('.canvas .dropbox').sortable({
        hoverClass: 'drop-hover',
        connectWith: ".dropbox",
        placeholder: 'place-op',
        containment: ".canvas",
        forceHelperSize: true,
        change: function (e, t) {
          if (t.item.prop('tagName') == "DIV") { box = true; } 
          else if (t.item.prop('tagName') == "SPAN") { box = false; }
          console.log("box: "+box);
          $.each($('.place-op, .place-ag'),function(i,el) { 
            console.log($(el)[0]);
            console.log($(t.placeholder)[0]);
            console.log($(e)[0] == t.placeholder[0]);
            if ($(el)[0] == t.placeholder[0]) {
              if (box) {w = '100%'} else {w = '108px;'}
              $(el).css('width',w);
            } else {
              $(el).appendTo($('body')).addClass('toRemove');
            }
          });
        },
        start: function (e, t) {
          if (t.item.prop('tagName') == "DIV") { helper = t.helper.find('div'); } 
          else if (t.item.prop('tagName') == "SPAN") { helper = t.helper; }
          $(t.placeholder).css('background',helper.css('background'));
        },
        beforeStop: function (e, t) {
          console.log('helper')
          console.log(t.helper)
          console.log('placeholder')
          console.log(t.placeholder)
          console.log('parent')
          console.log(t.placeholder.parent())
          t.item.replaceWith(createContainer(t.item));
          $(".dropbox").sortable({
            hoverClass: 'drop-hover',
            connectWith: ".dropbox",
            placeholder: 'place-op',
            containment: ".canvas",
            forceHelperSize: true,
          }).disableSelection();
        },
        stop: function (e, t) {
          console.log('item')
          console.log(t.item)
          $('.toRemove').detach();
          $('.canvas .root.dropbox .idrag').detach();
          $.each($('.canvas .dropbox'), function(i,it) {
            $(it).prepend($(it).children('icon.glyphicon.op'));
          });
        }
      }).disableSelection();

      $("icon.glyphicon").sortable("disable");

    } else {
      setTimeout(onFilterLoad,10);
    }
  }
  var createContainer = function (that) {
    console.log(that.prop('tagName'));
    if (that.prop('tagName')=='SPAN') {
      return $('<span title="'+toTitleCase($(that).attr('data-field').replace(/_/g,' '))+': '+$(that).text()+'"data-value="'+$(that).attr('data-value')+'" data-field="'+$(that).attr('data-field')+'" data-section="field" class="drag graybg" ><icon class="glyphicon glyphicon-chevron-down ag"></icon>'+($(that).text().length > 18 ? $(that).text().substr(0,16)+"..." : $(that).text())+'</span>');
    } else if ($(that).prop('tagName')=='DIV') {
      that = $(that).find('div')
      return $('<div><div data-value="'+that.attr('data-value')+'" data-section="box" class="dropbox '+that.attr('data-value')+'"><icon class="glyphicon glyphicon-chevron-down op"></icon></div></div>');
    }
  };

