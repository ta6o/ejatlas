-# coding: utf-8
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %title= @name ? @name + ' | ' + $title : $title + " | Mapping Environmental Justice"

    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    %meta{:content => 'text/html;charset=UTF-8', 'http-equiv' => "content-type"}/

    %meta{:content => (@name ? @name + ' | ' + $title : $title + " | Mapping Environmental Justice"), :name => 'title'}
    %meta{:content => (@headline || $pagedesc), :name => "description"}/
    %meta{:content => $pageauthor, :name => "author"}/
    %meta{:content => $pagekeyws, :name => "keywords"}/

    / Facebook meta tags
    %meta{:content => "website", :property => "og:type"}/
    %meta{:content => (@name ? @name + ' | ' + $title : $title + " | Mapping Environmental Justice"), :property => 'og:title'}
    %meta{:content => (@title || $pagedesc), :property => "og:description"}/
    %meta{:content => "#{$siteurl}#{request.path}", :property => "og:url"}/
    %meta{:content => (@ogimage || $siteurl + '/images/ejatlas-fb.jpg?1'), :property => "og:image"}/
    %meta{:content => "Environmental Justice Atlas", :property => 'og:site_name'}

    / Twitter meta tags
    %meta{:content => "summary", :name => "twitter:card"}/
    %meta{:content => $tw_handle, :name => "twitter:site"}/
    %meta{:content => (@name ? @name + ' | ' + $title : $title + " | Mapping Environmental Justice"), :name => 'twitter:title'}
    %meta{:content => (@headline || $pagedesc), :name => "twitter:description"}/
    %meta{:content => (@ogimage || $siteurl + '/images/ejatlas-fb.jpg'), :name => "twitter:image"}/

    =stylesheet_link_tag 'main-full'
    =javascript_include_tag 'jQl'
    :javascript
      var $locale = "#{I18n.locale}";
      var attributeHash = { 
        "category_id": "#{ t "v.filter.category"}",
        "types": "#{ t "v.filter.type"}",
        "other_types": "#{ t "m.types.other"}",
        "description": "#{ t "f.conflict.description"}",
        "country_id": "#{ t "f.conflict.country"}",
        "province": "#{ t "f.conflict.state_or_province"}",
        "site": "#{ t "f.conflict.municipality_or_city_town"}",
        "accuracy_level": "#{ t "f.conflict.accuracy_of_location"}",
        "project_area": "#{ t "f.conflict.project_area"}",
        //"project_length": "#{ t "f.conflict.project_length"}",
        "population_type": "#{ t "f.conflict.type_of_population"}",
        "products": "#{ t "f.conflict.specific_commodities"}",
        //"other_products": "#{ t "f.conflict.other_commodities"}",
        "companies": "#{ t "f.menu.companies"}",
        "supporters": "#{ t "f.menu.ifis"}",
        //"other_supporters": "#{ t "f.conflict.Other IFI's"}",
        "ejos": "#{ t "f.conflict.environmental_justice_organizations_other_supporters"}",
        "govt_actors": "#{ t "f.conflict.relevant_government_actors"}",
        "mobilizing_groups": "#{ t "v.filter.mobilizing_groups"}",
        //"other_mobilizing_groups": "#{ t "f.conflict.Other Mobilizing Groups"}",
        "mobilizing_forms": "#{ t "v.filter.mobilizing_forms"}",
        //"other_mobilizing_forms": "#{ t "f.conflict.Other Mobilizing Forms"}",
        "env_impacts": "#{ t "m.env_impacts.environmental_impacts"}",
        "other_env_impacts": "#{ t "m.env_impacts.other_environmental_impacts"}",
        "hlt_impacts": "#{ t "m.hlt_impacts.health_impacts"}",
        "other_hlt_impacts": "#{ t "m.hlt_impacts.other_health_impacts"}",
        "sec_impacts": "#{ t "m.sec_impacts.socio_economical_impacts"}",
        "other_sec_impacts": "#{ t "m.sec_impacts.other_socio_economic_impacts"}",
        "conflict_events": "#{ t "m.conflict_events.outcomes"}",
        //"other_outcomes": "#{ t "m.conflict_events.other_outcomes"}",
        "project_details": "#{ t "f.conflict.project_details"}",
        "investment_string": "#{ t "f.conflict.level_of_investment"}",
        "affected_people": "#{ t "f.conflict.affected_population"}",
        "status_id": "#{ t "f.conflict.intensity_of_conflict"}",
        "reaction_id": "#{ t "m.reaction_id.reaction_stage"}",
        "start_date": "#{ t "f.conflict.start_conflict"}",
        "end_date": "#{ t "f.conflict.end_conflict"}",
        "project_status_id": "#{ t "v.filter.project_status"}",
        "suggested_alternatives": "#{ t "f.conflict.development_of_alternatives"}",
        "success_level": "#{ t "m.success_level.success_level"}",
        "success_reason": "#{ t "m.success_level.success_reason"}",
        "other_comments": "#{ t "f.conflict.other_comments"}"
      };

      var categoryHash = #{CGI.unescapeHTML($cathash.to_json).html_safe};

      function resetColumns() { }
      var $locale = "#{I18n.locale}";

      img = new Image(330,30);
      img.src = '#{$fileurl}/static/ikon.png';
      $dir = "#{$dir}";
      $flo = $dir == "ltr" ? "left" : "right";
      var markerinfo = #{@markerinfo || ""};
      var vectorinfo = [];
      var layerinfo = [];
      var maptitle = "#{@maptitle}";
      var layers = "#{@baselayers}";
      var fid = 0;
      var layerranks = #{@ranks||[]};
    -if @vectors
      :javascript
        vectorinfo = #{@vectors};
    -if @filter
      :javascript
        $nomicmark = true;
    :javascript
      window.onload = onLoad;
      function onLoad() {
        if (typeof initMap === 'function' ) {
          initMap();
          if (markerinfo == "") {
            $.ajax({
              //url: "#{$fileurl}/markers/markers-#{I18n.locale}.json",
              url: "/data/markers-#{I18n.locale}.json",
              type: "GET",
              dataType: 'json',
              cache: true,
              success: function (data, status, error) {
                showMarkers(data);
                updateInfo(1,"<h3>#{@maptitle}</h3><p>#{@markercount} cases reported</p>")
                mapFit();
              },
              error: function (data, status, error) {
                console.log('error', data, status, error);
              }
            });
          } else {
            showMarkers(markerinfo);
            updateInfo(1,"<h3>#{@maptitle}</h3><p>#{@markercount} cases reported</p>")
            mapFit();
          }
        } else {
          setTimeout(onLoad,10);
        }
      }


    /[if lt IE 9]
      <script src="https://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    %link{:href => "/images/favicon.ico", :rel => "shortcut icon"}/
    / %link{:href => "assets/ico/apple-touch-icon-114-precomposed.png", :rel => "apple-touch-icon-precomposed", :sizes => "114x114"}/
    / %link{:href => "assets/ico/apple-touch-icon-72-precomposed.png", :rel => "apple-touch-icon-precomposed", :sizes => "72x72"}/
    / %link{:href => "assets/ico/apple-touch-icon-57-precomposed.png", :rel => "apple-touch-icon-precomposed"}/
  -if @filter
    :css
      #top {
        bottom: 50px;
      }


  %body.embed{"data-offset" => "0", "data-spy" => "scroll", "data-target" => ".subnav"}
    #map.map
    -if ENV['RACK_ENV'] == 'development'
      :javascript
        conflict = false;
        $full = true;
        jQl.loadjQ('/javascripts/main-dev.js','/javascripts/map.js'); 
    -else
      :javascript
        conflict = false;
        $full = true;
        jQl.loadjQ('/javascripts/main.js'); 
        $(document).ready(function(){
          window.onerror = function(message, url, lineNumber) {  
            $.ajax({
              type: 'POST',
              url: '/error',
              data: "message="+message+"&url="+window.location.href+"&file="+url+"&line="+lineNumber,  
              success: function(data,ts){
                //console.log('error reported:');
                //console.log(message, url, lineNumber);
              },
              error: function(data,ts,error){
                //console.log('error report failed:');
                //console.log(error);
                //console.log(message, url, lineNumber);
              }
            });
            return true;
          };  
        });
    -if @color and @color.length > 1
      :javascript
        $(document).ready(function(){
          $('#map').css('background','#{@color}')
        });
    #top
      %a{:href=>"https://#{I18n.locale == :en ? "" : "#{I18n.locale}." }ejatlas.org",:target=>"_blank"}
        .navbar.navbar-fixed-top{:style=>"cursor:pointer !important"}
          .navbar-inner
            -unless @filter
              .tagline
                %p= t "v.menu.environmental_justice_atlas"
              .ejatlas-logo#eja-logo

